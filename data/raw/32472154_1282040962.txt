{{Short description|Branch of machine learning}}
{{For|the TV series episode|Deep Learning (South Park)}}
[[File:Deep Learning.jpg|alt=Representing images on multiple layers of abstraction in deep learning|thumb|upright=1.35|Representing images on multiple layers of abstraction in deep learning<ref>{{Cite journal|last1=Schulz|first1=Hannes|last2=Behnke|first2=Sven|date=1 November 2012|title=Deep Learning|journal=KI - Künstliche Intelligenz|language=en|volume=26|issue=4|pages=357–363|doi=10.1007/s13218-012-0198-z|s2cid=220523562|issn=1610-1987|url=https://www.semanticscholar.org/paper/51a80649d16a38d41dbd20472deb3bc9b61b59a0}}</ref>]]
{{Artificial intelligence|Approaches}}

'''Deep learning''' is a subset of [[machine learning]] that focuses on utilizing [[neural network (machine learning)|neural network]]s to perform tasks such as [[Statistical classification|classification]], [[Regression analysis|regression]], and [[representation learning]]. The field takes inspiration from [[Neuroscience|biological neuroscience]] and is centered around stacking [[Artificial neuron|artificial neurons]] into layers and "training" them to process data. The adjective "deep" refers to the use of multiple layers (ranging from three to several hundred or thousands) in the network. Methods used can be either [[Supervised learning|supervised]], [[Semi-supervised learning|semi-supervised]] or [[Unsupervised learning|unsupervised]].<ref name="NatureBengio">{{cite journal |last1=LeCun |first1= Yann|last2=Bengio |first2=Yoshua | last3=Hinton | first3= Geoffrey|s2cid=3074096 |year=2015 |title=Deep Learning |journal=Nature |volume=521 |issue=7553 |pages=436–444 |doi=10.1038/nature14539 |pmid=26017442|bibcode=2015Natur.521..436L |url= https://hal.science/hal-04206682/file/Lecun2015.pdf}}</ref>

Some common deep learning network architectures include [[Fully connected network|fully connected networks]], [[deep belief network]]s, [[recurrent neural networks]], [[convolutional neural networks]], [[Generative adversarial network|generative adversarial networks]], [[Transformer (machine learning model)|transformers]], and [[Neural radiance field|neural radiance fields]]. These architectures have been applied to fields including [[computer vision]], [[speech recognition]], [[natural language processing]], [[machine translation]], [[bioinformatics]], [[drug design]], [[medical image analysis]], [[Climatology|climate science]], material inspection and [[board game]] programs, where they have produced results comparable to and in some cases surpassing human expert performance.<ref name=":9">{{Cite book |doi=10.1109/cvpr.2012.6248110 |isbn=978-1-4673-1228-8|arxiv=1202.2745|chapter=Multi-column deep neural networks for image classification|title=2012 IEEE Conference on Computer Vision and Pattern Recognition|pages=3642–3649|year=2012|last1=Ciresan|first1=D.|last2=Meier|first2=U.|last3=Schmidhuber|first3=J.|s2cid=2161592}}</ref><ref name="krizhevsky2012">{{cite journal|last1=Krizhevsky|first1=Alex|last2=Sutskever|first2=Ilya|last3=Hinton|first3=Geoffrey|date=2012|title=ImageNet Classification with Deep Convolutional Neural Networks|url=https://www.cs.toronto.edu/~kriz/imagenet_classification_with_deep_convolutional.pdf|journal=NIPS 2012: Neural Information Processing Systems, Lake Tahoe, Nevada|access-date=2017-05-24|archive-date=2017-01-10|archive-url=https://web.archive.org/web/20170110123024/http://www.cs.toronto.edu/~kriz/imagenet_classification_with_deep_convolutional.pdf|url-status=live}}</ref><ref>{{cite web |title=Google's AlphaGo AI wins three-match series against the world's best Go player |url=https://techcrunch.com/2017/05/24/alphago-beats-planets-best-human-go-player-ke-jie/amp/ |website=TechCrunch |date=25 May 2017 |access-date=17 June 2018 |archive-date=17 June 2018 |archive-url=https://web.archive.org/web/20180617065807/https://techcrunch.com/2017/05/24/alphago-beats-planets-best-human-go-player-ke-jie/amp/ |url-status=live }}</ref>

Early forms of neural networks were inspired by information processing and distributed communication nodes in [[biological system]]s, particularly the [[human brain]]. However, current neural networks do not intend to model the brain function of organisms, and are generally seen as low-quality models for that purpose.<ref>{{Cite web |date=2022-11-02 |title=Study urges caution when comparing neural networks to the brain |url=https://news.mit.edu/2022/neural-networks-brain-function-1102 |access-date=2023-12-06 |website=MIT News {{!}} Massachusetts Institute of Technology |language=en}}</ref>

{{toclimit|3}}

== Overview ==
Most modern deep learning models are based on multi-layered [[neural network (machine learning)|neural network]]s such as [[convolutional neural network]]s and [[transformer (neural network)|transformer]]s, although they can also include [[propositional formula]]s or latent variables organized layer-wise in deep [[generative model]]s such as the nodes in [[deep belief network]]s and deep [[Boltzmann machine]]s.<ref name="BENGIODEEP">{{cite journal|last=Bengio|first=Yoshua|year=2009|title=Learning Deep Architectures for AI|url=http://sanghv.com/download/soft/machine%20learning,%20artificial%20intelligence,%20mathematics%20ebooks/ML/learning%20deep%20architectures%20for%20AI%20%282009%29.pdf|journal=Foundations and Trends in Machine Learning|volume=2|issue=1|pages=1–127|doi=10.1561/2200000006|citeseerx=10.1.1.701.9550|s2cid=207178999 |access-date=3 September 2015|archive-url=https://web.archive.org/web/20160304084250/http://sanghv.com/download/soft/machine%20learning,%20artificial%20intelligence,%20mathematics%20ebooks/ML/learning%20deep%20architectures%20for%20AI%20(2009).pdf|archive-date=4 March 2016|url-status=dead}}</ref>

Fundamentally, deep learning refers to a class of [[machine learning]] [[algorithm]]s in which a hierarchy of layers is used to transform input data into a progressively more abstract and composite representation. For example, in an [[image recognition]] model, the raw input may be an [[image]] (represented as a [[Tensor (machine learning)|tensor]] of [[pixel]]s). The first representational layer may attempt to identify basic shapes such as lines and circles, the second layer may compose and encode arrangements of edges, the third layer may encode a nose and eyes, and the fourth layer may recognize that the image contains a face.

Importantly, a deep learning process can learn which features to optimally place at which level ''on its own''. Prior to deep learning, machine learning techniques often involved hand-crafted [[feature engineering]] to transform the data into a more suitable representation for a classification algorithm to operate on. In the deep learning approach, features are not hand-crafted and the model [[representation learning|discovers]] useful feature representations from the data automatically. This does not eliminate the need for hand-tuning; for example, varying numbers of layers and layer sizes can provide different degrees of abstraction.<ref name="BENGIO2012">{{cite journal|last2=Courville|first2=A.|last3=Vincent|first3=P.|year=2013|title=Representation Learning: A Review and New Perspectives|journal=IEEE Transactions on Pattern Analysis and Machine Intelligence|volume=35|issue=8|pages=1798–1828|arxiv=1206.5538|doi=10.1109/tpami.2013.50|pmid=23787338|last1=Bengio|first1=Y.|s2cid=393948}}</ref><ref name="NatureBengio" />

The word "deep" in "deep learning" refers to the number of layers through which the data is transformed. More precisely, deep learning systems have a substantial ''credit assignment path'' (CAP) depth. The CAP is the chain of transformations from input to output. CAPs describe potentially causal connections between input and output. For a [[feedforward neural network]], the depth of the CAPs is that of the network and is the number of hidden layers plus one (as the output layer is also parameterized). For [[recurrent neural network]]s, in which a signal may propagate through a layer more than once, the CAP depth is potentially unlimited.<ref name="SCHIDHUB" /> No universally agreed-upon threshold of depth divides shallow learning from deep learning, but most researchers agree that deep learning involves CAP depth higher than two. CAP of depth two has been shown to be a universal approximator in the sense that it can emulate any function.<ref>{{Cite book|url=https://books.google.com/books?id=9CqQDwAAQBAJ&pg=PA15|title=Human Behavior and Another Kind in Consciousness: Emerging Research and Opportunities: Emerging Research and Opportunities|last=Shigeki|first=Sugiyama|date=12 April 2019|publisher=IGI Global|isbn=978-1-5225-8218-2|language=en}}</ref> Beyond that, more layers do not add to the function approximator ability of the network. Deep models (CAP > two) are able to extract better features than shallow models and hence, extra layers help in learning the features effectively.

Deep learning architectures can be constructed with a [[greedy algorithm|greedy]] layer-by-layer method.<ref name=BENGIO2007>{{cite conference | first1=Yoshua | last1=Bengio | first2=Pascal | last2=Lamblin | first3=Dan | last3=Popovici | first4=Hugo | last4=Larochelle | title=Greedy layer-wise training of deep networks | year=2007 | url=http://papers.nips.cc/paper/3048-greedy-layer-wise-training-of-deep-networks.pdf | conference=Advances in neural information processing systems | pages=153–160 | access-date=2019-10-06 | archive-date=2019-10-20 | archive-url=https://web.archive.org/web/20191020195638/http://papers.nips.cc/paper/3048-greedy-layer-wise-training-of-deep-networks.pdf | url-status=live }}</ref> Deep learning helps to disentangle these abstractions and pick out which features improve performance.<ref name="BENGIO2012" />

Deep learning algorithms can be applied to unsupervised learning tasks. This is an important benefit because unlabeled data are more abundant than the labeled data. Examples of deep structures that can be trained in an unsupervised manner are [[deep belief network]]s.<ref name="BENGIO2012" /><ref name="SCHOLARDBNS">{{cite journal | last1 = Hinton | first1 = G.E. | year = 2009| title = Deep belief networks | journal = Scholarpedia | volume = 4 | issue = 5| page = 5947 | doi=10.4249/scholarpedia.5947| bibcode = 2009SchpJ...4.5947H| doi-access = free }}</ref>

The term ''Deep Learning'' was introduced to the machine learning community by [[Rina Dechter]] in 1986,<ref name="dechter1986">[[Rina Dechter]] (1986). Learning while searching in constraint-satisfaction problems. University of California, Computer Science Department, Cognitive Systems Laboratory.[https://www.researchgate.net/publication/221605378_Learning_While_Searching_in_Constraint-Satisfaction-Problems Online] {{Webarchive|url=https://web.archive.org/web/20160419054654/https://www.researchgate.net/publication/221605378_Learning_While_Searching_in_Constraint-Satisfaction-Problems|date=2016-04-19}}</ref> and to artificial neural networks by Igor Aizenberg and colleagues in 2000, in the context of [[Boolean network|Boolean]] threshold neurons.<ref name="MV_1">{{cite book |author1=Aizenberg, I.N. |url=https://link.springer.com/book/10.1007/978-1-4757-3115-6 |title=Multi-Valued and Universal Binary Neurons |author2=Aizenberg, N.N. |author3=Vandewalle, J. |date=2000 |publisher=Science & Business Media |isbn=978-0-7923-7824-2 |doi=10.1007/978-1-4757-3115-6 |access-date=27 December 2023}}</ref><ref>Co-evolving recurrent neurons learn deep memory POMDPs. Proc. GECCO, Washington, D. C., pp. 1795–1802, ACM Press, New York, NY, USA, 2005.</ref> Although the history of its appearance is apparently more complicated.<ref>{{Cite journal |last=Fradkov |first=Alexander L. |date=2020-01-01 |title=Early History of Machine Learning |journal=IFAC-PapersOnLine |series=21st IFAC World Congress |volume=53 |issue=2 |pages=1385–1390 |doi=10.1016/j.ifacol.2020.12.1888 |issn=2405-8963 |s2cid=235081987 |doi-access=free}}</ref>

== Interpretations ==
Deep neural networks are generally interpreted in terms of the [[universal approximation theorem]]<ref name=cyb>{{cite journal | last1 = Cybenko | year = 1989 | title = Approximations by superpositions of sigmoidal functions | url = http://deeplearning.cs.cmu.edu/pdfs/Cybenko.pdf | journal = [[Mathematics of Control, Signals, and Systems]] | volume = 2 | issue = 4 | pages = 303–314 | doi = 10.1007/bf02551274 | bibcode = 1989MCSS....2..303C | s2cid = 3958369 | url-status = dead | archive-url = https://web.archive.org/web/20151010204407/http://deeplearning.cs.cmu.edu/pdfs/Cybenko.pdf | archive-date = 10 October 2015 }}</ref><ref name=horn>{{cite journal | last1 = Hornik | first1 = Kurt | year = 1991 | title = Approximation Capabilities of Multilayer Feedforward Networks | journal = Neural Networks | volume = 4 | issue = 2| pages = 251–257 | doi=10.1016/0893-6080(91)90009-t| s2cid = 7343126 }}</ref><ref name="Haykin, Simon 1998">{{cite book|first=Simon S. |last=Haykin|title=Neural Networks: A Comprehensive Foundation|url={{google books |plainurl=y |id=bX4pAQAAMAAJ}}|year=1999|publisher=Prentice Hall|isbn=978-0-13-273350-2}}</ref><ref name="Hassoun, M. 1995 p. 48">{{cite book|first=Mohamad H. |last=Hassoun|title=Fundamentals of Artificial Neural Networks|url={{google books |plainurl=y |id=Otk32Y3QkxQC|page=48}}|year=1995|publisher=MIT Press|isbn=978-0-262-08239-6|page=48}}</ref><ref name=ZhouLu>Lu, Z., Pu, H., Wang, F., Hu, Z., & Wang, L. (2017). [http://papers.nips.cc/paper/7203-the-expressive-power-of-neural-networks-a-view-from-the-width The Expressive Power of Neural Networks: A View from the Width] {{Webarchive|url=https://web.archive.org/web/20190213005539/http://papers.nips.cc/paper/7203-the-expressive-power-of-neural-networks-a-view-from-the-width |date=2019-02-13 }}. Neural Information Processing Systems, 6231-6239.</ref> or [[Bayesian inference|probabilistic inference]].<ref>{{cite journal |last1=Orhan |first1=A. E. |last2=Ma |first2=W. J. |date=2017 |title=Efficient probabilistic inference in generic neural networks trained with non-probabilistic feedback |journal=Nature Communications |volume=8 |issue=1 |pages=138 | pmid=28743932 | doi=10.1038/s41467-017-00181-8|pmc=5527101 |bibcode=2017NatCo...8..138O | doi-access=free}}</ref><ref name="BOOK2014">{{cite journal |last1=Deng |first1=L. |last2=Yu |first2=D. |year=2014 |title=Deep Learning: Methods and Applications |url=http://research.microsoft.com/pubs/209355/DeepLearning-NowPublishing-Vol7-SIG-039.pdf |url-status=live |journal=Foundations and Trends in Signal Processing |volume=7 |issue=3–4 |pages=1–199 |doi=10.1561/2000000039 |archive-url=https://web.archive.org/web/20160314152112/http://research.microsoft.com/pubs/209355/DeepLearning-NowPublishing-Vol7-SIG-039.pdf |archive-date=2016-03-14 |access-date=2014-10-18}}</ref><ref name="BENGIO2012" /><ref name="SCHIDHUB">{{cite journal|last=Schmidhuber|first=J.|s2cid=11715509|year=2015|title=Deep Learning in Neural Networks: An Overview|journal=Neural Networks|volume=61|pages=85–117|arxiv=1404.7828|doi=10.1016/j.neunet.2014.09.003|pmid=25462637}}</ref><ref name = MURPHY>{{cite book|first=Kevin P. |last=Murphy|title=Machine Learning: A Probabilistic Perspective|url={{google books |plainurl=y |id=NZP6AQAAQBAJ}}|date=24 August 2012|publisher=MIT Press|isbn=978-0-262-01802-9}}</ref>

The classic universal approximation theorem concerns the capacity of [[feedforward neural networks]] with a single hidden layer of finite size to approximate [[continuous functions]].<ref name="cyb"/><ref name="horn"/><ref name="Haykin, Simon 1998"/><ref name="Hassoun, M. 1995 p. 48"/> In 1989, the first proof was published by [[George Cybenko]] for [[sigmoid function|sigmoid]] activation functions<ref name="cyb" /> and was generalised to feed-forward multi-layer architectures in 1991 by Kurt Hornik.<ref name="horn" /> Recent work also showed that universal approximation also holds for non-bounded activation functions such as [[Kunihiko Fukushima]]'s [[rectified linear unit]].<ref name="Fukushima1969">{{cite journal |last1=Fukushima |first1=K. |date=1969 |title=Visual feature extraction by a multilayered network of analog threshold elements |journal=IEEE Transactions on Systems Science and Cybernetics |volume=5 |issue=4 |pages=322–333 |doi=10.1109/TSSC.1969.300225}}</ref><ref name=sonoda17>{{cite journal | last1 = Sonoda | first1 = Sho | last2=Murata | first2=Noboru | s2cid = 12149203 | year = 2017 | title = Neural network with unbounded activation functions is universal approximator | journal = Applied and Computational Harmonic Analysis | volume = 43 | issue = 2 | pages = 233–268 | doi = 10.1016/j.acha.2015.12.005| arxiv = 1505.03654 }}</ref>

The universal approximation theorem for [[deep neural network]]s concerns the capacity of networks with bounded width but the depth is allowed to grow. Lu et al.<ref name=ZhouLu/> proved that if the width of a deep neural network with [[ReLU]] activation is strictly larger than the input dimension, then the network can approximate any [[Lebesgue integration|Lebesgue integrable function]]; if the width is smaller or equal to the input dimension, then a deep neural network is not a universal approximator.

The [[probabilistic]] interpretation<ref name="MURPHY" /> derives from the field of [[machine learning]]. It features inference,<ref name="BOOK2014" /><ref name="BENGIODEEP" /><ref name="BENGIO2012" /><ref name="SCHIDHUB" /><ref name="SCHOLARDBNS" /><ref name="MURPHY" /> as well as the [[optimization]] concepts of [[training]] and [[test (assessment)|testing]], related to fitting and [[generalization]], respectively. More specifically, the probabilistic interpretation considers the activation nonlinearity as a [[cumulative distribution function]].<ref name="MURPHY" /> The probabilistic interpretation led to the introduction of [[dropout (neural networks)|dropout]] as [[Regularization (mathematics)|regularizer]] in neural networks. The probabilistic interpretation was introduced by researchers including [[John Hopfield|Hopfield]], [[Bernard Widrow|Widrow]] and [[Kumpati S. Narendra|Narendra]] and popularized in surveys such as the one by [[Christopher Bishop|Bishop]].<ref name="prml">{{cite book|title=Pattern Recognition and Machine Learning|author=Bishop, Christopher M.|year=2006|publisher=Springer|url=http://users.isr.ist.utl.pt/~wurmd/Livros/school/Bishop%20-%20Pattern%20Recognition%20And%20Machine%20Learning%20-%20Springer%20%202006.pdf|isbn=978-0-387-31073-2|access-date=2017-08-06|archive-date=2017-01-11|archive-url=https://web.archive.org/web/20170111005101/http://users.isr.ist.utl.pt/~wurmd/Livros/school/Bishop%20-%20Pattern%20Recognition%20And%20Machine%20Learning%20-%20Springer%20%202006.pdf|url-status=live}}</ref>

== History ==

=== Before 1980 ===

There are two [[Types of artificial neural networks|types]] of artificial neural network (ANN): [[feedforward neural network]] (FNN) or [[multilayer perceptron]] (MLP) and [[recurrent neural networks]] (RNN). RNNs have cycles in their connectivity structure, FNNs don't. In the 1920s, [[Wilhelm Lenz]] and [[Ernst Ising]] created the [[Ising model]]<ref  name="ising1925">{{Cite web|url=https://www.hs-augsburg.de/~harsch/anglica/Chronology/20thC/Ising/isi_fm00.html|title=bibliotheca Augustana|website=www.hs-augsburg.de}}</ref><ref name="brush67">{{cite journal |doi=10.1103/RevModPhys.39.883|title=History of the Lenz-Ising Model|year=1967|last1=Brush|first1=Stephen G.|journal=Reviews of Modern Physics|volume=39|issue=4|pages=883–893|bibcode=1967RvMP...39..883B}}</ref> which is essentially a non-learning RNN architecture consisting of neuron-like threshold elements. In 1972, [[Shun'ichi Amari]] made this architecture adaptive.<ref name="Amari1972">{{cite journal |last1=Amari |first1=Shun-Ichi |title=Learning patterns and pattern sequences by self-organizing nets of threshold elements|journal= IEEE Transactions |date=1972 |volume=C |issue=21 |pages=1197–1206 }}</ref><ref name="DLhistory"/> His learning RNN was republished by [[John Hopfield]] in 1982.<ref name="Hopfield1982">{{cite journal |last1=Hopfield |first1=J. J. |title=Neural networks and physical systems with emergent collective computational abilities |journal= Proceedings of the National Academy of Sciences|date=1982 |volume=79 |issue=8 |pages=2554–2558 |doi=10.1073/pnas.79.8.2554 |pmid=6953413 |pmc=346238 |bibcode=1982PNAS...79.2554H |doi-access=free }}</ref> Other early [[recurrent neural network]]s were published by Kaoru Nakano in 1971.<ref name="Nakano1971">{{cite book |last1=Nakano |first1=Kaoru |chapter=Learning Process in a Model of Associative Memory |title=Pattern Recognition and Machine Learning |date=1971|pages=172–186 |doi=10.1007/978-1-4615-7566-5_15 |isbn=978-1-4615-7568-9 }}</ref><ref name="Nakano1972">{{cite journal |last1=Nakano |first1=Kaoru |title=Associatron-A Model of Associative Memory|journal= IEEE Transactions on Systems, Man, and Cybernetics |date=1972 |volume=SMC-2 |issue=3|pages=380–388 |doi=10.1109/TSMC.1972.4309133 }}</ref> Already in 1948, [[Alan Turing]] produced work on "Intelligent Machinery"  that was not published in his lifetime,<ref name="turing1948">{{cite journal |last1=Turing |first1=Alan |title=Intelligent Machinery | journal= Unpublished (Later Published in Ince DC, Editor, Collected Works of AM Turing—Mechanical Intelligence, Elsevier Science Publishers, 1992)| date=1948}}</ref> containing "ideas related to artificial evolution and learning RNNs".<ref name="DLhistory"/>

[[Frank Rosenblatt]] (1958)<ref>{{Cite journal |last=Rosenblatt |first=F. |date=1958 |title=The perceptron: A probabilistic model for information storage and organization in the brain. |url=https://doi.apa.org/doi/10.1037/h0042519 |journal=Psychological Review |language=en |volume=65 |issue=6 |pages=386–408 |doi=10.1037/h0042519 |pmid=13602029 |issn=1939-1471}}</ref> proposed the perceptron, an MLP with 3 layers: an input layer, a hidden layer with randomized weights that did not learn, and an output layer. He later published a 1962 book that also introduced variants and computer experiments, including a version with four-layer perceptrons "with adaptive preterminal networks" where the last two layers have learned weights (here he credits H. D. Block and B. W. Knight).<ref name="rosenblatt1962">{{cite book |last=Rosenblatt |first=Frank |author-link=Frank Rosenblatt |title=Principles of Neurodynamics |publisher=Spartan, New York |year=1962}}</ref>{{rp|section 16}} The book cites an earlier network by R. D. Joseph (1960)<ref name="joseph1960">{{cite book |last=Joseph |first=R. D.  |title=Contributions to Perceptron Theory, Cornell Aeronautical Laboratory Report No. VG-11 96--G-7, Buffalo |year=1960}}</ref> "functionally equivalent to a variation of" this four-layer system (the book mentions Joseph over 30 times). Should Joseph therefore be considered the originator of proper adaptive [[multilayer perceptrons]] with learning hidden units? Unfortunately, the learning algorithm was not a functional one, and fell into oblivion.

The first working deep learning algorithm was the [[Group method of data handling]], a method to train arbitrarily deep neural networks, published by [[Alexey Ivakhnenko]] and Lapa in 1965. They regarded it as a form of polynomial regression,<ref name="ivak1965">{{cite book|first1=A. G. |last1=Ivakhnenko |first2=V. G. |last2=Lapa |title=Cybernetics and Forecasting Techniques|url={{google books |plainurl=y |id=rGFgAAAAMAAJ}}|year=1967|publisher=American Elsevier Publishing Co.|isbn=978-0-444-00020-0}}</ref> or a generalization of Rosenblatt's perceptron.<ref>{{Cite journal |last=Ivakhnenko |first=A.G. |date=March 1970 |title=Heuristic self-organization in problems of engineering cybernetics |url=https://linkinghub.elsevier.com/retrieve/pii/0005109870900920 |journal=Automatica |language=en |volume=6 |issue=2 |pages=207–219 |doi=10.1016/0005-1098(70)90092-0}}</ref> A 1971 paper described a deep network with eight layers trained by this method,<ref name="ivak1971">{{Cite journal|last=Ivakhnenko|first=Alexey|date=1971|title=Polynomial theory of complex systems|url=http://gmdh.net/articles/history/polynomial.pdf|journal=IEEE Transactions on Systems, Man, and Cybernetics|pages=364–378|doi=10.1109/TSMC.1971.4308320|volume=SMC-1|issue=4|access-date=2019-11-05|archive-date=2017-08-29|archive-url=https://web.archive.org/web/20170829230621/http://www.gmdh.net/articles/history/polynomial.pdf|url-status=live}}</ref> which is based on layer by layer training through regression analysis. Superfluous hidden units are pruned using a separate validation set. Since the activation functions of the nodes are Kolmogorov-Gabor polynomials, these were also the first deep networks with multiplicative units or "gates".<ref name="DLhistory"/>

The first deep learning [[multilayer perceptron]] trained by [[stochastic gradient descent]]<ref name="robbins1951">{{Cite journal | last1 = Robbins | first1 = H. | author-link = Herbert Robbins| last2 = Monro | first2 = S. | doi = 10.1214/aoms/1177729586 | title = A Stochastic Approximation Method | journal = The Annals of Mathematical Statistics | volume = 22 | issue = 3 | pages = 400 | year = 1951 | doi-access = free }}</ref> was published in 1967 by [[Shun'ichi Amari]].<ref name="Amari1967">{{cite journal |last1=Amari |first1=Shun'ichi |author-link=Shun'ichi Amari|title=A theory of adaptive pattern classifier|journal= IEEE Transactions |date=1967 |volume=EC |issue=16 |pages=279–307}}</ref> In computer experiments conducted by Amari's student Saito, a five layer MLP with two modifiable layers learned  [[Knowledge representation|internal representations]] to classify non-linearily separable pattern classes.<ref name="DLhistory">{{cite arXiv |eprint=2212.11279 |class=cs.NE |first=Jürgen |last=Schmidhuber |author-link=Jürgen Schmidhuber |title=Annotated History of Modern AI and Deep Learning |date=2022}}</ref> Subsequent developments in hardware and hyperparameter tunings have made end-to-end [[stochastic gradient descent]] the currently dominant training technique.

In 1969, [[Kunihiko Fukushima]] introduced the [[rectifier (neural networks)|ReLU]] (rectified linear unit) [[activation function]].<ref name="Fukushima1969" /><ref name="DLhistory" /> The rectifier has become the most popular activation function for deep learning.<ref>{{cite arXiv |eprint=1710.05941 |class=cs.NE |first1=Prajit |last1=Ramachandran |first2=Zoph |last2=Barret |title=Searching for Activation Functions |date=October 16, 2017 |last3=Quoc |first3=V. Le}}</ref>

Deep learning architectures for [[convolutional neural network]]s (CNNs) with convolutional layers and downsampling layers began with the [[Neocognitron]] introduced by [[Kunihiko Fukushima]] in 1979, though not trained by backpropagation.<ref name="FUKU1979">{{cite journal |last1=Fukushima |first1=K. |year=1979 |title=Neural network model for a mechanism of pattern recognition unaffected by shift in position—Neocognitron |journal=Trans. IECE (In Japanese)|volume= J62-A |issue=10 |pages=658–665 |doi=10.1007/bf00344251 |pmid=7370364 |s2cid=206775608}}</ref><ref name="FUKU1980">{{cite journal |last1=Fukushima |first1=K. |year=1980 |title=Neocognitron: A self-organizing neural network model for a mechanism of pattern recognition unaffected by shift in position |journal=Biol. Cybern. |volume=36 |issue=4 |pages=193–202 |doi=10.1007/bf00344251 |pmid=7370364 |s2cid=206775608}}</ref> 

[[Backpropagation]] is an efficient application of the [[chain rule]] derived by [[Gottfried Wilhelm Leibniz]] in 1673<ref name="leibniz1676">{{Cite book |last=Leibniz |first=Gottfried Wilhelm Freiherr von |url=https://books.google.com/books?id=bOIGAAAAYAAJ&q=leibniz+altered+manuscripts&pg=PA90 |title=The Early Mathematical Manuscripts of Leibniz: Translated from the Latin Texts Published by Carl Immanuel Gerhardt with Critical and Historical Notes (Leibniz published the chain rule in a 1676 memoir) |date=1920 |publisher=Open court publishing Company |isbn=9780598818461 |language=en}}</ref> to networks of differentiable nodes. The terminology "back-propagating errors" was actually introduced in 1962 by Rosenblatt,<ref name="rosenblatt1962" /> but he did not know how to implement this, although [[Henry J. Kelley]] had a continuous precursor of backpropagation in 1960 in the context of [[control theory]].<ref name="kelley1960">{{cite journal |last1=Kelley |first1=Henry J. |author-link=Henry J. Kelley |year=1960 |title=Gradient theory of optimal flight paths |journal=ARS Journal |volume=30 |issue=10 |pages=947–954 |doi=10.2514/8.5282}}</ref> The modern form of backpropagation was first published in [[Seppo Linnainmaa]]'s master thesis (1970).<ref name="lin19703">{{cite thesis |first=Seppo |last=Linnainmaa |author-link=Seppo Linnainmaa |year=1970 |type=Masters |title=The representation of the cumulative rounding error of an algorithm as a Taylor expansion of the local rounding errors |language=fi |publisher=University of Helsinki |page=6–7}}</ref><ref name="lin19763">{{cite journal |last1=Linnainmaa |first1=Seppo |author-link=Seppo Linnainmaa |year=1976 |title=Taylor expansion of the accumulated rounding error |journal=BIT Numerical Mathematics |volume=16 |issue=2 |pages=146–160 |doi=10.1007/bf01931367 |s2cid=122357351}}</ref><ref name="DLhistory" /> G.M. Ostrovski et al. republished it in 1971.<ref name="ostrowski1971">Ostrovski, G.M., Volin,Y.M., and Boris, W.W. (1971). On the computation of derivatives. Wiss. Z. Tech. Hochschule for Chemistry, 13:382–384.</ref><ref name="backprop"/> [[Paul Werbos]] applied backpropagation to neural networks in 1982<ref name="werbos1982">{{cite book |last=Werbos |first=Paul |author-link=Paul Werbos |title=System modeling and optimization |publisher=Springer |year=1982 |pages=762–770 |chapter=Applications of advances in nonlinear sensitivity analysis |access-date=2 July 2017 |chapter-url=http://werbos.com/Neural/SensitivityIFIPSeptember1981.pdf |archive-url=https://web.archive.org/web/20160414055503/http://werbos.com/Neural/SensitivityIFIPSeptember1981.pdf |archive-date=14 April 2016 |url-status=live}}</ref> (his 1974 PhD thesis, reprinted in a 1994 book,<ref name="werbos1974">{{cite book |last=Werbos |first=Paul J. |title=The Roots of Backpropagation : From Ordered Derivatives to Neural Networks and Political Forecasting |location=New York |publisher=John Wiley & Sons |year=1994 |isbn=0-471-59897-6 }}</ref> did not yet describe the algorithm<ref name="backprop">{{cite web | last = Schmidhuber | first = Juergen  | title = Who Invented Backpropagation? | author-link=Juergen Schmidhuber| publisher = IDSIA, Switzerland | url = https://people.idsia.ch/~juergen/who-invented-backpropagation.html | date = 25 Oct 2014 | access-date = 14 Sep 2024 | archive-url = http://web.archive.org/web/20240730110408/https://people.idsia.ch/~juergen/who-invented-backpropagation.html | archive-date = 30 July 2024 | quote = }}</ref>). In 1986, [[David E. Rumelhart]] et al. popularised backpropagation but did not cite the original work.<ref>{{Cite journal |last1=Rumelhart |first1=David E. |last2=Hinton |first2=Geoffrey E. |last3=Williams |first3=Ronald J. |date=October 1986 |title=Learning representations by back-propagating errors |url=https://www.nature.com/articles/323533a0 |journal=Nature |language=en |volume=323 |issue=6088 |pages=533–536 |doi=10.1038/323533a0 |bibcode=1986Natur.323..533R |issn=1476-4687}}</ref><ref name="rumelhart1986">Rumelhart, David E., Geoffrey E. Hinton, and R. J. Williams. "[https://apps.dtic.mil/dtic/tr/fulltext/u2/a164453.pdf Learning Internal Representations by Error Propagation] {{Webarchive|url=https://web.archive.org/web/20221013070443/https://apps.dtic.mil/dtic/tr/fulltext/u2/a164453.pdf |date=2022-10-13 }}". David E. Rumelhart, James L. McClelland, and the PDP research group. (editors), Parallel distributed processing: Explorations in the microstructure of cognition, Volume 1: Foundation. MIT Press, 1986.</ref>

=== 1980s-2000s ===

The [[time delay neural network]] (TDNN) was introduced in 1987 by [[Alex Waibel]] to apply CNN to phoneme recognition. It used convolutions, weight sharing, and backpropagation.<ref name=Waibel1987>{{cite conference |title=Phoneme Recognition Using Time-Delay Neural Networks |last1=Waibel |first1=Alex |date=December 1987 |location=Tokyo, Japan |conference=Meeting of the Institute of Electrical, Information and Communication Engineers (IEICE) | url=https://isl.anthropomatik.kit.edu/pdf/Waibel1987a.pdf}}</ref><ref name="speechsignal">[[Alex Waibel|Alexander Waibel]] et al., ''[http://www.inf.ufrgs.br/~engel/data/media/file/cmp121/waibel89_TDNN.pdf Phoneme Recognition Using Time-Delay Neural Networks]'' IEEE Transactions on Acoustics, Speech, and Signal Processing, Volume 37, No. 3, pp. 328. – 339 March 1989.</ref>  In 1988, Wei Zhang applied a backpropagation-trained CNN to alphabet recognition.<ref name="wz1988">{{cite journal |last=Zhang |first=Wei |date=1988 |title=Shift-invariant pattern recognition neural network and its optical architecture |url=https://drive.google.com/file/d/1nN_5odSG_QVae54EsQN_qSz-0ZsX6wA0/view?usp=sharing |journal=Proceedings of Annual Conference of the Japan Society of Applied Physics}}</ref> 
In 1989, [[Yann LeCun]] et al. created a CNN called [[LeNet]] for [[Handwriting recognition|recognizing handwritten ZIP code]]s on mail. Training required 3 days.<ref name="LECUN1989">LeCun ''et al.'', "Backpropagation Applied to Handwritten Zip Code Recognition", ''Neural Computation'', 1, pp. 541–551, 1989.</ref> In 1990, Wei Zhang implemented a CNN on [[optical computing]] hardware.<ref name="wz1990">{{cite journal |last=Zhang |first=Wei |date=1990 |title=Parallel distributed processing model with local space-invariant interconnections and its optical architecture |url=https://drive.google.com/file/d/0B65v6Wo67Tk5ODRzZmhSR29VeDg/view?usp=sharing |journal=Applied Optics |volume=29 |issue=32 |pages=4790–7 |bibcode=1990ApOpt..29.4790Z |doi=10.1364/AO.29.004790 |pmid=20577468}}</ref> In 1991, a CNN was applied to medical image object segmentation<ref>{{cite journal |last=Zhang |first=Wei |date=1991 |title=Image processing of human corneal endothelium based on a learning network |url=https://drive.google.com/file/d/0B65v6Wo67Tk5cm5DTlNGd0NPUmM/view?usp=sharing |journal=Applied Optics |volume=30 |issue=29 |pages=4211–7 |bibcode=1991ApOpt..30.4211Z |doi=10.1364/AO.30.004211 |pmid=20706526}}</ref> and breast cancer detection in mammograms.<ref>{{cite journal |last=Zhang |first=Wei |date=1994 |title=Computerized detection of clustered microcalcifications in digital mammograms using a shift-invariant artificial neural network |url=https://drive.google.com/file/d/0B65v6Wo67Tk5Ml9qeW5nQ3poVTQ/view?usp=sharing |journal=Medical Physics |volume=21 |issue=4 |pages=517–24 |bibcode=1994MedPh..21..517Z |doi=10.1118/1.597177 |pmid=8058017}}</ref> [[LeNet]]-5 (1998), a 7-level CNN by [[Yann LeCun]] et al., that classifies digits, was applied by several banks to recognize hand-written numbers on checks  digitized in 32x32 pixel images.<ref name="lecun98">{{cite journal |last=LeCun |first=Yann |author2=Léon Bottou |author3=Yoshua Bengio |author4=Patrick Haffner |year=1998 |title=Gradient-based learning applied to document recognition |url=http://yann.lecun.com/exdb/publis/pdf/lecun-01a.pdf |journal=Proceedings of the IEEE |volume=86 |issue=11 |pages=2278–2324 |citeseerx=10.1.1.32.9552 |doi=10.1109/5.726791 |s2cid=14542261 |access-date=October 7, 2016}}</ref>

[[Recurrent neural network]]s (RNN)<ref  name="ising1925"/><ref name="Amari1972"/> were further developed in the 1980s. Recurrence is used for sequence processing, and when a recurrent network is unrolled, it mathematically resembles a deep feedforward layer. Consequently, they have similar properties and issues, and their developments had mutual influences. In RNN, two early influential works were the [[Recurrent neural network#Jordan network|Jordan network]] (1986)<ref>{{Cite journal |last=Jordan |first=Michael I. |date=1986 |title=Attractor dynamics and parallelism in a connectionist sequential machine |url=https://escholarship.org/uc/item/1fg2j76h |journal=Proceedings of the Annual Meeting of the Cognitive Science Society |language=en |volume=8 }}</ref> and the [[Recurrent neural network#Elman network|Elman network]] (1990),<ref>{{Cite journal |last=Elman |first=Jeffrey L. |date=March 1990 |title=Finding Structure in Time |url=https://onlinelibrary.wiley.com/doi/10.1207/s15516709cog1402_1 |journal=Cognitive Science |language=en |volume=14 |issue=2 |pages=179–211 |doi=10.1207/s15516709cog1402_1 |issn=0364-0213}}</ref> which applied RNN to study problems in [[cognitive psychology]].

In the 1980s, backpropagation did not work well for deep learning with long credit assignment paths. To overcome this problem, in 1991, [[Jürgen Schmidhuber]] proposed a hierarchy of RNNs pre-trained one level at a time by [[self-supervised learning]] where each RNN tries to predict its own next input, which is the next unexpected input of the RNN below.<ref name="chunker1991">{{cite journal |last1=Schmidhuber |first1=Jürgen |date= April 1991 |title=Neural Sequence Chunkers  | author-link=Jürgen Schmidhuber |url=https://people.idsia.ch/~juergen/FKI-148-91ocr.pdf|journal= TR FKI-148, TU Munich}}</ref><ref name="schmidhuber1992">{{cite journal |last1=Schmidhuber |first1=Jürgen |year=1992 |title=Learning complex, extended sequences using the principle of history compression (based on TR FKI-148, 1991) |url=https://sferics.idsia.ch/pub/juergen/chunker.pdf|journal=Neural Computation |volume=4 |issue=2 |pages=234–242 |doi=10.1162/neco.1992.4.2.234 |s2cid=18271205 }}</ref> This "neural history compressor" uses [[predictive coding]]  to learn [[Knowledge representation|internal representations]] at multiple self-organizing time scales. This can substantially facilitate downstream deep learning. The RNN hierarchy can be ''collapsed'' into a single RNN, by  [[Knowledge distillation|distilling]] a higher level ''chunker'' network into a lower level ''automatizer'' network.<ref name="chunker1991" /><ref name="schmidhuber1992" /><ref name=DLhistory/> In 1993, a neural history compressor solved a "Very Deep Learning" task that required more than 1000 subsequent [[Layer (deep learning)|layers]] in an RNN unfolded in time.<ref name="schmidhuber1993">{{Cite book |last=Schmidhuber |first=Jürgen |url=https://sferics.idsia.ch/pub/juergen/habilitation.pdf |archive-url=https://web.archive.org/web/20220516075450/https://sferics.idsia.ch/pub/juergen/habilitation.pdf |url-status=dead |archive-date=May 16, 2022 |title=Habilitation thesis: System modeling and optimization |year=1993}} Page 150 ff demonstrates credit assignment across the equivalent of 1,200 layers in an unfolded RNN.</ref> The "P" in [[ChatGPT]] refers to such pre-training.

[[Sepp Hochreiter]]'s diploma thesis (1991)<ref name="HOCH1991">S. Hochreiter., "[http://people.idsia.ch/~juergen/SeppHochreiter1991ThesisAdvisorSchmidhuber.pdf Untersuchungen zu dynamischen neuronalen Netzen]". {{Webarchive|url=https://web.archive.org/web/20150306075401/http://people.idsia.ch/~juergen/SeppHochreiter1991ThesisAdvisorSchmidhuber.pdf |date=2015-03-06 }}. ''Diploma thesis. Institut f. Informatik, Technische Univ. Munich. Advisor: J. Schmidhuber'', 1991.</ref> implemented the neural history compressor,<ref name="chunker1991" /> and identified and analyzed the [[vanishing gradient problem]].<ref name="HOCH1991" /><ref name="HOCH2001">{{cite book|chapter-url={{google books |plainurl=y |id=NWOcMVA64aAC}}|title=A Field Guide to Dynamical Recurrent Networks|last=Hochreiter|first=S.|display-authors=etal|date=15 January 2001|publisher=John Wiley & Sons|isbn=978-0-7803-5369-5|chapter=Gradient flow in recurrent nets: the difficulty of learning long-term dependencies|editor-last2=Kremer|editor-first2=Stefan C.|editor-first1=John F.|editor-last1=Kolen}}</ref>  Hochreiter proposed recurrent [[Residual neural network|residual]] connections to solve the vanishing gradient problem. This led to the [[long short-term memory]] (LSTM), published in 1995.<ref>{{Cite Q|Q98967430}}</ref> LSTM can learn "very deep learning" tasks<ref name="SCHIDHUB" /> with long credit assignment paths that require memories of events that happened thousands of discrete time steps before. That LSTM was not yet the modern architecture, which required a "forget gate", introduced in 1999,<ref name="lstm1999">{{Cite book |doi = 10.1049/cp:19991218|chapter = Learning to forget: Continual prediction with LSTM|title = 9th International Conference on Artificial Neural Networks: ICANN '99|volume = 1999|pages = 850–855|year = 1999|last1 = Gers|first1 = Felix| last2 = Schmidhuber|first2 = Jürgen| last3 = Cummins|first3 = Fred| isbn = 0-85296-721-7}}</ref> which became the standard RNN architecture.

In 1991, [[Jürgen Schmidhuber]] also published adversarial neural networks that contest with each other in the form of a [[zero-sum game]], where one network's gain is the other network's loss.<ref name="curiosity1991">{{cite conference| title = A possibility for implementing curiosity and boredom in model-building neural controllers | last1 = Schmidhuber | first1 = Jürgen | author-link = Jürgen Schmidhuber | date = 1991 | publisher = MIT Press/Bradford Books| book-title = Proc. SAB'1991| pages = 222–227}}</ref><ref name="fun2010">{{cite journal|last1=Schmidhuber|first1=Jürgen|author-link=Jürgen Schmidhuber|year=2010|title=Formal Theory of Creativity, Fun, and Intrinsic Motivation (1990-2010)|journal= IEEE Transactions on Autonomous Mental Development|volume=2|issue=3|pages=230–247|doi=10.1109/TAMD.2010.2056368 |s2cid=234198 }}</ref> The first network is a [[generative model]] that models a [[probability distribution]] over output patterns. The second network learns by [[gradient descent]] to predict the reactions of the environment to these patterns. This was called "artificial curiosity". In 2014, this principle was used in [[generative adversarial network]]s (GANs).<ref name="gancurpm2020">{{Cite journal|last=Schmidhuber|first=Jürgen| author-link = Jürgen Schmidhuber |date=2020|title=Generative Adversarial Networks are Special Cases of Artificial Curiosity (1990) and also Closely Related to Predictability Minimization (1991)|journal=Neural Networks |language=en|volume=127|pages=58–66|doi=10.1016/j.neunet.2020.04.008 |pmid=32334341 |arxiv=1906.04493 |s2cid=216056336 }}</ref>

During 1985–1995, inspired by statistical mechanics, several architectures and methods were developed by [[Terry Sejnowski]], [[Peter Dayan]], [[Geoffrey Hinton]], etc., including the [[Boltzmann machine]],<ref>{{Cite journal |last1=Ackley |first1=David H. |last2=Hinton |first2=Geoffrey E. |last3=Sejnowski |first3=Terrence J. |date=1985-01-01 |title=A learning algorithm for boltzmann machines |url=https://www.sciencedirect.com/science/article/pii/S0364021385800124 |journal=Cognitive Science |volume=9 |issue=1 |pages=147–169 |doi=10.1016/S0364-0213(85)80012-4 |issn=0364-0213}}</ref> [[restricted Boltzmann machine]],<ref>{{cite book |last=Smolensky |first=Paul |title=Parallel Distributed Processing: Explorations in the Microstructure of Cognition, Volume 1: Foundations |title-link=Connectionism |publisher=MIT Press |year=1986 |isbn=0-262-68053-X |editor1-last=Rumelhart |editor1-first=David E. |pages=[https://archive.org/details/paralleldistribu00rume/page/194 194–281] |chapter=Chapter 6: Information Processing in Dynamical Systems: Foundations of Harmony Theory |editor2-last=McLelland |editor2-first=James L. |chapter-url=https://stanford.edu/~jlmcc/papers/PDP/Volume%201/Chap6_PDP86.pdf}}</ref> [[Helmholtz machine]],<ref name="nc95">{{Cite journal |last1=Peter |first1=Dayan |last2=Hinton |first2=Geoffrey E. |last3=Neal |first3=Radford M. |last4=Zemel |first4=Richard S. |date=1995 |title=The Helmholtz machine. |journal=Neural Computation |volume=7 |issue=5 |pages=889–904 |doi=10.1162/neco.1995.7.5.889 |pmid=7584891 |s2cid=1890561 |hdl-access=free |author-link1=Peter Dayan |author-link2=Geoffrey Hinton |author-link3=Radford M. Neal |author-link4=Richard Zemel |hdl=21.11116/0000-0002-D6D3-E}} {{closed access}}</ref> and the [[wake-sleep algorithm]].<ref name=":1">{{Cite journal |last1=Hinton |first1=Geoffrey E. |author-link=Geoffrey Hinton |last2=Dayan |first2=Peter |last3=Frey |first3=Brendan J. |last4=Neal |first4=Radford |date=1995-05-26 |title=The wake-sleep algorithm for unsupervised neural networks |journal=Science |volume=268 |issue=5214 |pages=1158–1161 |bibcode=1995Sci...268.1158H |doi=10.1126/science.7761831 |pmid=7761831 |s2cid=871473 |author-link2=Peter Dayan |author-link3=Brendan Frey}}</ref> These were designed for unsupervised learning of deep generative models. However, those were more computationally expensive compared to backpropagation. Boltzmann machine learning algorithm, published in 1985, was briefly popular before being eclipsed by the backpropagation algorithm in 1986. (p.&nbsp;112 <ref>{{Cite book |last=Sejnowski |first=Terrence J. |title=The deep learning revolution |date=2018 |publisher=The MIT Press |isbn=978-0-262-03803-4 |location=Cambridge, Massachusetts}}</ref>). A 1988 network became state of the art in [[protein structure prediction]], an early application of deep learning to bioinformatics.<ref>{{Cite journal |last1=Qian |first1=Ning |last2=Sejnowski |first2=Terrence J. |date=1988-08-20 |title=Predicting the secondary structure of globular proteins using neural network models |url=https://dx.doi.org/10.1016/0022-2836%2888%2990564-5 |journal=Journal of Molecular Biology |volume=202 |issue=4 |pages=865–884 |doi=10.1016/0022-2836(88)90564-5 |pmid=3172241 |issn=0022-2836}}</ref>

Both shallow and deep learning (e.g., recurrent nets) of ANNs for [[speech recognition]] have been explored for many years.<ref>{{Cite journal|last1=Morgan|first1=Nelson|last2=Bourlard |first2=Hervé |last3=Renals |first3=Steve |last4=Cohen |first4=Michael|last5=Franco |first5=Horacio |date=1 August 1993 |title=Hybrid neural network/hidden markov model systems for continuous speech recognition |journal=International Journal of Pattern Recognition and Artificial Intelligence|volume=07|issue=4|pages=899–916|doi=10.1142/s0218001493000455|issn=0218-0014}}</ref><ref name="Robinson1992">{{Cite journal|last=Robinson|first=T.|author-link=Tony Robinson (speech recognition)|date=1992|title=A real-time recurrent error propagation network word recognition system|url=http://dl.acm.org/citation.cfm?id=1895720|journal=ICASSP|pages=617–620|isbn=9780780305328|series=Icassp'92|access-date=2017-06-12|archive-date=2021-05-09|archive-url=https://web.archive.org/web/20210509123135/https://dl.acm.org/doi/10.5555/1895550.1895720|url-status=live}}</ref><ref>{{Cite journal|last1=Waibel|first1=A.|last2=Hanazawa|first2=T.|last3=Hinton|first3=G.|last4=Shikano|first4=K.|last5=Lang|first5=K. J.|date=March 1989|title=Phoneme recognition using time-delay neural networks|journal=IEEE Transactions on Acoustics, Speech, and Signal Processing|volume=37|issue=3|pages=328–339|doi=10.1109/29.21701|issn=0096-3518|hdl=10338.dmlcz/135496|s2cid=9563026 |url=http://dml.cz/bitstream/handle/10338.dmlcz/135496/Kybernetika_38-2002-6_2.pdf|access-date=2019-09-24|archive-date=2021-04-27|archive-url=https://web.archive.org/web/20210427001446/https://dml.cz/bitstream/handle/10338.dmlcz/135496/Kybernetika_38-2002-6_2.pdf|url-status=live}}</ref> These methods never outperformed non-uniform internal-handcrafting Gaussian [[mixture model]]/[[Hidden Markov model]] (GMM-HMM) technology based on generative models of speech trained discriminatively.<ref name="Baker2009">{{cite journal | last1 = Baker | first1 = J. | last2 = Deng | first2 = Li | last3 = Glass | first3 = Jim | last4 = Khudanpur | first4 = S. | last5 = Lee | first5 = C.-H. | last6 = Morgan | first6 = N. | last7 = O'Shaughnessy | first7 = D. | year = 2009 | title = Research Developments and Directions in Speech Recognition and Understanding, Part 1 | journal = IEEE Signal Processing Magazine | volume = 26 | issue = 3| pages = 75–80 | doi=10.1109/msp.2009.932166| bibcode = 2009ISPM...26...75B | hdl = 1721.1/51891 | s2cid = 357467 }}</ref> Key difficulties have been analyzed, including gradient diminishing<ref name="HOCH1991" /> and weak temporal correlation structure in neural predictive models.<ref name="Bengio1991">{{Cite web|url=https://www.researchgate.net/publication/41229141|title=Artificial Neural Networks and their Application to Speech/Sequence Recognition|last=Bengio|first=Y.|date=1991|publisher=McGill University Ph.D. thesis|access-date=2017-06-12|archive-date=2021-05-09|archive-url=https://web.archive.org/web/20210509123131/https://www.researchgate.net/publication/41229141_Artificial_neural_networks_and_their_application_to_sequence_recognition|url-status=live}}</ref><ref name="Deng1994">{{cite journal | last1 = Deng | first1 = L. | last2 = Hassanein | first2 = K. | last3 = Elmasry | first3 = M. | year = 1994 | title = Analysis of correlation structure for a neural predictive model with applications to speech recognition | journal = Neural Networks | volume = 7 | issue = 2| pages = 331–339 | doi=10.1016/0893-6080(94)90027-2}}</ref> Additional difficulties were the lack of training data and limited computing power.

Most [[speech recognition]] researchers moved away from neural nets to pursue generative modeling. An exception was at [[SRI International]] in the late 1990s. Funded by the US government's [[National Security Agency|NSA]] and [[DARPA]], SRI researched in speech and [[speaker recognition]]. The speaker recognition team led by [[Larry Heck]] reported significant success with deep neural networks in speech processing in the 1998 [[National Institute of Standards and Technology|NIST]] Speaker Recognition benchmark.<ref name="Doddington2000">{{cite journal | last1 = Doddington | first1 = G. | last2 =  Przybocki | first2 = M. | last3 = Martin | first3 = A. | last4 = Reynolds | first4 = D. | year = 2000 | title = The NIST speaker recognition evaluation ± Overview, methodology, systems, results, perspective | journal = Speech Communication | volume = 31 | issue = 2| pages = 225–254 | doi=10.1016/S0167-6393(99)00080-1}}</ref><ref name="Heck2000">{{cite journal |last1=Heck |first1=L. |last2=Konig |first2=Y. |last3=Sonmez |first3=M. |last4=Weintraub |first4=M. |year=2000 |title=Robustness to Telephone Handset Distortion in Speaker Recognition by Discriminative Feature Design |journal=Speech Communication |volume=31 |issue=2 |pages=181–192 |doi=10.1016/s0167-6393(99)00077-1}}</ref> It was deployed in the Nuance Verifier, representing the first major industrial application of deep learning.<ref>L.P Heck and R. Teunen. "Secure and Convenient Transactions with Nuance Verifier". Nuance Users Conference, April 1998.</ref>

The principle of elevating "raw" features over hand-crafted optimization was first explored successfully in the architecture of deep autoencoder on the "raw" spectrogram or linear [[Filter bank|filter-bank]] features in the late 1990s,<ref name="Heck2000" /> showing its superiority over the [[Mel-frequency cepstrum|Mel-Cepstral]] features that contain stages of fixed transformation from spectrograms. The raw features of speech, [[waveform]]s, later produced excellent larger-scale results.<ref>{{Cite web|url=https://www.researchgate.net/publication/266030526|title=Acoustic Modeling with Deep Neural Networks Using Raw Time Signal for LVCSR (PDF Download Available)|website=ResearchGate|access-date=14 June 2017|archive-date=9 May 2021|archive-url=https://web.archive.org/web/20210509123218/https://www.researchgate.net/publication/266030526_Acoustic_Modeling_with_Deep_Neural_Networks_Using_Raw_Time_Signal_for_LVCSR|url-status=live}}</ref>

=== 2000s ===
Neural networks entered a lull, and simpler models that use task-specific handcrafted features such as [[Gabor filter]]s and [[support vector machine]]s (SVMs) became the preferred choices in the 1990s and 2000s, because of artificial neural networks' computational cost and a lack of understanding of how the brain wires its biological networks.{{Citation needed|date=August 2024}}

In 2003, LSTM became competitive with traditional speech recognizers on certain tasks.<ref name="graves2003">{{Cite web |last1=Graves |first1=Alex |last2=Eck |first2=Douglas |last3=Beringer |first3=Nicole |last4=Schmidhuber |first4=Jürgen |date=2003 |title=Biologically Plausible Speech Recognition with LSTM Neural Nets |url=ftp://ftp.idsia.ch/pub/juergen/bioadit2004.pdf |url-status=live |archive-url=https://web.archive.org/web/20210509123139/ftp://ftp.idsia.ch/pub/juergen/bioadit2004.pdf |archive-date=2021-05-09 |access-date=2016-04-09 |website=1st Intl. Workshop on Biologically Inspired Approaches to Advanced Information Technology, Bio-ADIT 2004, Lausanne, Switzerland |pages=175–184}}</ref> In 2006, [[Alex Graves (computer scientist)|Alex Graves]], Santiago Fernández, Faustino Gomez, and Schmidhuber combined it with [[connectionist temporal classification]] (CTC)<ref name="graves2006">{{Cite journal |last1=Graves |first1=Alex |author1-link=Alex Graves (computer scientist) |last2=Fernández |first2=Santiago |last3=Gomez |first3=Faustino |last4=Schmidhuber |first4=Jürgen |author4-link=Jürgen Schmidhuber |date=2006 |title=Connectionist temporal classification: Labelling unsegmented sequence data with recurrent neural networks |journal=Proceedings of the International Conference on Machine Learning, ICML 2006 |pages=369–376 |citeseerx=10.1.1.75.6306}}</ref> in stacks of LSTMs.<ref name="fernandez2007keyword">Santiago Fernandez, Alex Graves, and Jürgen Schmidhuber (2007). [https://mediatum.ub.tum.de/doc/1289941/file.pdf An application of recurrent neural networks to discriminative keyword spotting] {{Webarchive|url=https://web.archive.org/web/20181118164457/https://mediatum.ub.tum.de/doc/1289941/file.pdf|date=2018-11-18}}. Proceedings of ICANN (2), pp. 220–229.</ref> In 2009, it became the first RNN to win a [[pattern recognition]] contest, in connected [[handwriting recognition]].<ref>Graves, Alex; and Schmidhuber, Jürgen; ''Offline Handwriting Recognition with Multidimensional Recurrent Neural Networks'', in Bengio, Yoshua; Schuurmans, Dale; Lafferty, John; Williams, Chris K. I.; and Culotta, Aron (eds.), ''Advances in Neural Information Processing Systems 22 (NIPS'22), December 7th–10th, 2009, Vancouver, BC'', Neural Information Processing Systems (NIPS) Foundation, 2009, pp. 545–552</ref><ref name="SCHIDHUB" />

In 2006, publications by [[Geoffrey Hinton|Geoff Hinton]], [[Russ Salakhutdinov|Ruslan Salakhutdinov]], Osindero and [[Yee Whye Teh|Teh]]<ref>{{Cite journal |last=Hinton |first=Geoffrey E. |date=1 October 2007 |title=Learning multiple layers of representation |url=http://www.cell.com/trends/cognitive-sciences/abstract/S1364-6613(07)00217-3 |url-status=live |journal=Trends in Cognitive Sciences |volume=11 |issue=10 |pages=428–434 |doi=10.1016/j.tics.2007.09.004 |issn=1364-6613 |pmid=17921042 |s2cid=15066318 |archive-url=https://web.archive.org/web/20131011071435/http://www.cell.com/trends/cognitive-sciences/abstract/S1364-6613(07)00217-3 |archive-date=11 October 2013 |access-date=12 June 2017}}</ref><ref name="hinton06">{{Cite journal |last1=Hinton |first1=G. E. |author-link1=Geoff Hinton |last2=Osindero |first2=S. |last3=Teh |first3=Y. W. |year=2006 |title=A Fast Learning Algorithm for Deep Belief Nets |url=http://www.cs.toronto.edu/~hinton/absps/fastnc.pdf |url-status=live |journal=[[Neural Computation (journal)|Neural Computation]] |volume=18 |issue=7 |pages=1527–1554 |doi=10.1162/neco.2006.18.7.1527 |pmid=16764513 |s2cid=2309950 |archive-url=https://web.archive.org/web/20151223164129/http://www.cs.toronto.edu/~hinton/absps/fastnc.pdf |archive-date=2015-12-23 |access-date=2011-07-20}}</ref> [[deep belief network]]s were developed for generative modeling. They are trained by training one restricted Boltzmann machine, then freezing it and training another one on top of the first one, and so on, then optionally [[Fine-tuning (deep learning)|fine-tuned]] using supervised backpropagation.<ref name="HINTON2007">G. E. Hinton., "[http://www.csri.utoronto.ca/~hinton/absps/ticsdraft.pdf Learning multiple layers of representation]". {{Webarchive|url=https://web.archive.org/web/20180522112408/http://www.csri.utoronto.ca/~hinton/absps/ticsdraft.pdf|date=2018-05-22}}. ''Trends in Cognitive Sciences'', 11, pp. 428–434, 2007.</ref> They could model high-dimensional probability distributions, such as the distribution of [[MNIST database|MNIST images]], but convergence was slow.<ref>{{Cite journal |last=Hinton |first=Geoffrey E. |date=October 2007 |title=Learning multiple layers of representation |url=https://linkinghub.elsevier.com/retrieve/pii/S1364661307002173 |journal=Trends in Cognitive Sciences |language=en |volume=11 |issue=10 |pages=428–434 |doi=10.1016/j.tics.2007.09.004|pmid=17921042 }}</ref><ref>{{Cite journal |last1=Hinton |first1=Geoffrey E. |last2=Osindero |first2=Simon |last3=Teh |first3=Yee-Whye |date=July 2006 |title=A Fast Learning Algorithm for Deep Belief Nets |url=https://direct.mit.edu/neco/article/18/7/1527-1554/7065 |journal=Neural Computation |language=en |volume=18 |issue=7 |pages=1527–1554 |doi=10.1162/neco.2006.18.7.1527 |pmid=16764513 |issn=0899-7667}}</ref><ref>{{Cite journal |last=Hinton |first=Geoffrey E. |date=2009-05-31 |title=Deep belief networks |journal=Scholarpedia |language=en |volume=4 |issue=5 |pages=5947 |doi=10.4249/scholarpedia.5947 |doi-access=free |bibcode=2009SchpJ...4.5947H |issn=1941-6016}}</ref>

The impact of deep learning in industry began in the early 2000s, when CNNs already processed an estimated 10% to 20% of all the checks written in the US, according to Yann LeCun.<ref name="lecun2016slides">[[Yann LeCun]] (2016). Slides on Deep Learning [https://indico.cern.ch/event/510372/ Online] {{Webarchive|url=https://web.archive.org/web/20160423021403/https://indico.cern.ch/event/510372/|date=2016-04-23}}</ref> Industrial applications of deep learning to large-scale speech recognition started around 2010.

The 2009 NIPS Workshop on Deep Learning for Speech Recognition was motivated by the limitations of deep generative models of speech, and the possibility that given more capable hardware and large-scale data sets that deep neural nets might become practical. It was believed that pre-training DNNs using generative models of deep belief nets (DBN) would overcome the main difficulties of neural nets. However, it was discovered that replacing pre-training with large amounts of training data for straightforward backpropagation when using DNNs with large, context-dependent output layers produced error rates dramatically lower than then-state-of-the-art Gaussian mixture model (GMM)/Hidden Markov Model (HMM) and also than more-advanced generative model-based systems.<ref name="HintonDengYu2012">{{cite journal | last1 = Hinton | first1 = G. | last2 = Deng | first2 = L. | last3 = Yu | first3 = D. | last4 = Dahl | first4 = G. | last5 = Mohamed | first5 = A. | last6 = Jaitly | first6 = N. | last7 = Senior | first7 = A. | last8 = Vanhoucke | first8 = V. | last9 = Nguyen | first9 = P. | last10 = Sainath | first10 = T. | author10-link = Tara Sainath | last11 = Kingsbury | first11 = B. | year = 2012 | title =  Deep Neural Networks for Acoustic Modeling in Speech Recognition: The Shared Views of Four Research Groups| journal = IEEE Signal Processing Magazine | volume = 29 | issue = 6| pages = 82–97 | doi=10.1109/msp.2012.2205597 | bibcode = 2012ISPM...29...82H| s2cid = 206485943 }}</ref> The nature of the recognition errors produced by the two types of systems was characteristically different,<ref name="ReferenceICASSP2013" /> offering technical insights into how to integrate deep learning into the existing highly efficient, run-time speech decoding system deployed by all major speech recognition systems.<ref name="BOOK2014" /><ref name="ReferenceA">{{cite book|last2=Deng|first2=L.|date=2014|title=Automatic Speech Recognition: A Deep Learning Approach (Publisher: Springer)|url={{google books |plainurl=y |id=rUBTBQAAQBAJ}}|isbn=978-1-4471-5779-3|last1=Yu|first1=D.|publisher=Springer }}</ref><ref>{{cite web|title=Deng receives prestigious IEEE Technical Achievement Award - Microsoft Research|url=https://www.microsoft.com/en-us/research/blog/deng-receives-prestigious-ieee-technical-achievement-award/|website=Microsoft Research|date=3 December 2015|access-date=16 March 2018|archive-date=16 March 2018|archive-url=https://web.archive.org/web/20180316084821/https://www.microsoft.com/en-us/research/blog/deng-receives-prestigious-ieee-technical-achievement-award/|url-status=live}}</ref> Analysis around 2009–2010, contrasting the GMM (and other generative speech models) vs. DNN models, stimulated early industrial investment in deep learning for speech recognition.<ref name="ReferenceICASSP2013" />  That analysis was done with comparable performance (less than 1.5% in error rate) between discriminative DNNs and generative models.<ref name="HintonDengYu2012" /><ref name="ReferenceICASSP2013">{{cite web| last1=Deng| first1=L.| last2=Hinton| first2=G.| last3=Kingsbury| first3=B.| date=May 2013| title=New types of deep neural network learning for speech recognition and related applications: An overview (ICASSP)| url=https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/ICASSP-2013-DengHintonKingsbury-revised.pdf| publisher=Microsoft| access-date=27 December 2023| archive-date=2017-09-26| archive-url=https://web.archive.org/web/20170926190920/https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/ICASSP-2013-DengHintonKingsbury-revised.pdf| url-status=live}}</ref><ref name="interspeech2014Keynote">{{Cite web|url=https://www.superlectures.com/interspeech2014/downloadFile?id=6&type=slides&filename=achievements-and-challenges-of-deep-learning-from-speech-analysis-and-recognition-to-language-and-multimodal-processing|title=Keynote talk: 'Achievements and Challenges of Deep Learning - From Speech Analysis and Recognition To Language and Multimodal Processing'|last=Li|first=Deng|date=September 2014|website=Interspeech|access-date=2017-06-12|archive-date=2017-09-26|archive-url=https://web.archive.org/web/20170926190732/https://www.superlectures.com/interspeech2014/downloadFile?id=6&type=slides&filename=achievements-and-challenges-of-deep-learning-from-speech-analysis-and-recognition-to-language-and-multimodal-processing|url-status=live}}</ref>
In 2010, researchers extended deep learning from [[TIMIT]] to large vocabulary speech recognition, by adopting large output layers of the DNN based on context-dependent HMM states constructed by [[decision tree]]s.<ref name="Roles2010">{{cite journal|last1=Yu|first1=D.|last2=Deng|first2=L.|date=2010|title=Roles of Pre-Training and Fine-Tuning in Context-Dependent DBN-HMMs for Real-World Speech Recognition|url=https://www.microsoft.com/en-us/research/publication/roles-of-pre-training-and-fine-tuning-in-context-dependent-dbn-hmms-for-real-world-speech-recognition/|journal=NIPS Workshop on Deep Learning and Unsupervised Feature Learning|access-date=2017-06-14|archive-date=2017-10-12|archive-url=https://web.archive.org/web/20171012095148/https://www.microsoft.com/en-us/research/publication/roles-of-pre-training-and-fine-tuning-in-context-dependent-dbn-hmms-for-real-world-speech-recognition/|url-status=live}}</ref><ref>{{Cite book|last1=Seide|first1=F.|last2=Li|first2=G.|last3=Yu|first3=D.|title=Interspeech 2011 |chapter=Conversational speech transcription using context-dependent deep neural networks |date=2011 |chapter-url=https://www.microsoft.com/en-us/research/publication/conversational-speech-transcription-using-context-dependent-deep-neural-networks |pages=437–440|doi=10.21437/Interspeech.2011-169|s2cid=398770 |access-date=2017-06-14|archive-date=2017-10-12|archive-url=https://web.archive.org/web/20171012095522/https://www.microsoft.com/en-us/research/publication/conversational-speech-transcription-using-context-dependent-deep-neural-networks/|url-status=live}}</ref><ref>{{Cite journal|last1=Deng|first1=Li|last2=Li|first2=Jinyu|last3=Huang|first3=Jui-Ting|last4=Yao|first4=Kaisheng|last5=Yu|first5=Dong|last6=Seide|first6=Frank|last7=Seltzer|first7=Mike|last8=Zweig|first8=Geoff|last9=He|first9=Xiaodong|date=1 May 2013|title=Recent Advances in Deep Learning for Speech Research at Microsoft|url=https://www.microsoft.com/en-us/research/publication/recent-advances-in-deep-learning-for-speech-research-at-microsoft/|journal=Microsoft Research|access-date=14 June 2017|archive-date=12 October 2017|archive-url=https://web.archive.org/web/20171012044053/https://www.microsoft.com/en-us/research/publication/recent-advances-in-deep-learning-for-speech-research-at-microsoft/|url-status=live}}</ref><ref name="ReferenceA" />

=== Deep learning revolution ===
[[File:AI-ML-DL.svg|thumb|How deep learning is a subset of machine learning and how machine learning is a subset of artificial intelligence (AI)]]

The deep learning revolution started around CNN- and GPU-based computer vision.

Although CNNs trained by backpropagation had been around for decades and GPU implementations of NNs for years,<ref name="jung2004">{{cite journal |last1=Oh |first1=K.-S. |last2=Jung |first2=K. |year=2004 |title=GPU implementation of neural networks |journal=Pattern Recognition |volume=37 |issue=6 |pages=1311–1314 |bibcode=2004PatRe..37.1311O |doi=10.1016/j.patcog.2004.01.013}}</ref> including CNNs,<ref name="chellapilla2006">{{Citation |last1=Chellapilla |first1=Kumar |title=High performance convolutional neural networks for document processing |date=2006 |url=https://hal.inria.fr/inria-00112631/document |access-date=2021-02-14 |archive-url=https://web.archive.org/web/20200518193413/https://hal.inria.fr/inria-00112631/document |archive-date=2020-05-18 |url-status=live |last2=Puri |first2=Sidd |last3=Simard |first3=Patrice}}</ref> faster implementations of CNNs on GPUs were needed to progress on computer vision. Later, as deep learning becomes widespread, specialized hardware and algorithm optimizations were developed specifically for deep learning.<ref name="sze2017">{{cite arXiv |eprint=1703.09039 |class=cs.CV |first1=Vivienne |last1=Sze |first2=Yu-Hsin |last2=Chen |author1-link=Vivienne Sze |title=Efficient Processing of Deep Neural Networks: A Tutorial and Survey |last3=Yang |first3=Tien-Ju |last4=Emer |first4=Joel |year=2017}}</ref>

A key advance for the deep learning revolution was hardware advances, especially GPU. Some early work dated back to 2004.<ref name="jung2004" /><ref name="chellapilla2006" /> In 2009, Raina, Madhavan, and [[Andrew Ng]] reported a 100M deep belief network trained on 30 Nvidia [[GeForce GTX 280]] GPUs, an early demonstration of GPU-based deep learning. They reported up to 70 times faster training.<ref>{{Cite book |last1=Raina |first1=Rajat |last2=Madhavan |first2=Anand |last3=Ng |first3=Andrew Y. |chapter=Large-scale deep unsupervised learning using graphics processors |date=2009-06-14 |title=Proceedings of the 26th Annual International Conference on Machine Learning |chapter-url=https://doi.org/10.1145/1553374.1553486 |series=ICML '09 |location=New York, NY, USA |publisher=Association for Computing Machinery |pages=873–880 |doi=10.1145/1553374.1553486 |isbn=978-1-60558-516-1}}</ref>

In 2011, a CNN named ''DanNet<ref name=":3">{{Cite journal |last1=Cireşan |first1=Dan Claudiu |last2=Meier |first2=Ueli |last3=Gambardella |first3=Luca Maria |last4=Schmidhuber |first4=Jürgen |date=21 September 2010 |title=Deep, Big, Simple Neural Nets for Handwritten Digit Recognition |journal=Neural Computation |volume=22 |issue=12 |pages=3207–3220 |arxiv=1003.0358 |doi=10.1162/neco_a_00052 |issn=0899-7667 |pmid=20858131 |s2cid=1918673}}</ref>''<ref name=":6">{{Cite journal|last1=Ciresan|first1=D. C.|last2=Meier|first2=U.|last3=Masci|first3=J.|last4=Gambardella|first4=L.M.|last5=Schmidhuber|first5=J.|date=2011|title=Flexible, High Performance Convolutional Neural Networks for Image Classification|url=http://ijcai.org/papers11/Papers/IJCAI11-210.pdf|journal=International Joint Conference on Artificial Intelligence|doi=10.5591/978-1-57735-516-8/ijcai11-210|access-date=2017-06-13|archive-date=2014-09-29|archive-url=https://web.archive.org/web/20140929094040/http://ijcai.org/papers11/Papers/IJCAI11-210.pdf|url-status=live}}</ref> by Dan Ciresan, Ueli Meier, Jonathan Masci, [[Luca Maria Gambardella]], and [[Jürgen Schmidhuber]] achieved for the first time superhuman performance in a visual pattern recognition contest, outperforming traditional methods by a factor of 3.<ref name="SCHIDHUB" /> It then won more contests.<ref name=":8">{{Cite book|url=http://papers.nips.cc/paper/4741-deep-neural-networks-segment-neuronal-membranes-in-electron-microscopy-images.pdf|title=Advances in Neural Information Processing Systems 25|last1=Ciresan|first1=Dan|last2=Giusti|first2=Alessandro|last3=Gambardella|first3=Luca M.|last4=Schmidhuber|first4=Jürgen|date=2012|publisher=Curran Associates, Inc.|editor-last=Pereira|editor-first=F.|pages=2843–2851|editor-last2=Burges|editor-first2=C. J. C.|editor-last3=Bottou|editor-first3=L.|editor-last4=Weinberger|editor-first4=K. Q.|access-date=2017-06-13|archive-date=2017-08-09|archive-url=https://web.archive.org/web/20170809081713/http://papers.nips.cc/paper/4741-deep-neural-networks-segment-neuronal-membranes-in-electron-microscopy-images.pdf|url-status=live}}</ref><ref name="ciresan2013miccai">{{Cite book |last1=Ciresan |first1=D. |title=Medical Image Computing and Computer-Assisted Intervention – MICCAI 2013 |last2=Giusti |first2=A. |last3=Gambardella |first3=L.M. |last4=Schmidhuber |first4=J. |date=2013 |isbn=978-3-642-38708-1 |series=Lecture Notes in Computer Science |volume=7908 |pages=411–418 |chapter=Mitosis Detection in Breast Cancer Histology Images with Deep Neural Networks |doi=10.1007/978-3-642-40763-5_51 |pmid=24579167 |issue=Pt 2}}</ref> They also showed how [[Max pooling|max-pooling]] CNNs on GPU improved performance significantly.<ref name=":9" />

In 2012, [[Andrew Ng]] and [[Jeff Dean (computer scientist)|Jeff Dean]] created an FNN that learned to recognize higher-level concepts, such as cats, only from watching unlabeled images taken from [[YouTube]] videos.<ref name="ng2012">{{cite arXiv |eprint=1112.6209 |class=cs.LG |first1=Andrew |last1=Ng |first2=Jeff |last2=Dean |title=Building High-level Features Using Large Scale Unsupervised Learning |year=2012}}</ref>

In October 2012, [[AlexNet]] by [[Alex Krizhevsky]], [[Ilya Sutskever]], and [[Geoffrey Hinton]]<ref name="krizhevsky2012" /> won the large-scale [[ImageNet competition]] by a significant margin over shallow machine learning methods. Further incremental improvements included the [[VGG-19|VGG-16]] network by [[Karen Simonyan (scientist)|Karen Simonyan]] and [[Andrew Zisserman]]<ref name="VGG">{{cite arXiv|last1=Simonyan |first1=Karen |last2=Andrew |first2=Zisserman |title=Very Deep Convolution Networks for Large Scale Image Recognition |year=2014 |class=cs.CV |eprint=1409.1556}}</ref> and Google's [[Inceptionv3]].<ref name="szegedy">{{Cite journal |last=Szegedy |first=Christian |date=2015 |title=Going deeper with convolutions |url=https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43022.pdf |journal=Cvpr2015|arxiv=1409.4842 }}</ref>

The success in image classification was then extended to the more challenging task of [[Automatic image annotation|generating descriptions]] (captions) for images, often as a combination of CNNs and LSTMs.<ref name="1411.4555">{{cite arXiv |eprint=1411.4555 |class=cs.CV |first1=Oriol |last1=Vinyals |first2=Alexander |last2=Toshev |title=Show and Tell: A Neural Image Caption Generator |last3=Bengio |first3=Samy |last4=Erhan |first4=Dumitru |year=2014}}.</ref><ref name="1411.4952">{{cite arXiv |eprint=1411.4952 |class=cs.CV |first1=Hao |last1=Fang |first2=Saurabh |last2=Gupta |title=From Captions to Visual Concepts and Back |last3=Iandola |first3=Forrest |last4=Srivastava |first4=Rupesh |last5=Deng |first5=Li |last6=Dollár |first6=Piotr |last7=Gao |first7=Jianfeng |last8=He |first8=Xiaodong |last9=Mitchell |first9=Margaret |last10=Platt |first10=John C |last11=Lawrence Zitnick |first11=C |last12=Zweig |first12=Geoffrey |year=2014}}.</ref><ref name="1411.2539">{{cite arXiv |eprint=1411.2539 |class=cs.LG |first1=Ryan |last1=Kiros |first2=Ruslan |last2=Salakhutdinov |title=Unifying Visual-Semantic Embeddings with Multimodal Neural Language Models |last3=Zemel |first3=Richard S |year=2014}}.</ref>

In 2014, the state of the art was training “very deep neural network” with 20 to 30 layers.<ref>{{Citation |last1=Simonyan |first1=Karen |title=Very Deep Convolutional Networks for Large-Scale Image Recognition |date=2015-04-10 |arxiv=1409.1556 |last2=Zisserman |first2=Andrew}}</ref> Stacking too many layers led to a steep reduction in [[Training, validation, and test data sets|training]] accuracy,<ref name="prelu">{{cite arXiv |eprint=1502.01852 |class=cs.CV |first1=Kaiming |last1=He |first2=Xiangyu |last2=Zhang |title=Delving Deep into Rectifiers: Surpassing Human-Level Performance on ImageNet Classification |last3=Ren |first3=Shaoqing |last4=Sun |first4=Jian |year=2016}}</ref> known as the "degradation" problem.<ref name="resnet">{{Cite conference |last1=He |first1=Kaiming |last2=Zhang |first2=Xiangyu |last3=Ren |first3=Shaoqing |last4=Sun |first4=Jian |date=10 Dec 2015 |title=Deep Residual Learning for Image Recognition |arxiv=1512.03385}}</ref> In 2015, two techniques were developed to train very deep networks: the Highway Network was published in May 2015, and the [[residual neural network]] (ResNet)<ref name="resnet20152">{{Cite conference |last1=He |first1=Kaiming |last2=Zhang |first2=Xiangyu |last3=Ren |first3=Shaoqing |last4=Sun |first4=Jian |date=2016 |title=Deep Residual Learning for Image Recognition |url=https://ieeexplore.ieee.org/document/7780459 |location=Las Vegas, NV, USA |publisher=IEEE |pages=770–778 |arxiv=1512.03385 |doi=10.1109/CVPR.2016.90 |isbn=978-1-4673-8851-1 |journal=2016 IEEE Conference on Computer Vision and Pattern Recognition (CVPR)}}</ref> in Dec 2015. ResNet behaves like an open-gated Highway Net.

Around the same time, deep learning started impacting the field of art. Early examples included [[DeepDream|Google DeepDream]] (2015), and [[neural style transfer]] (2015),<ref>{{cite arXiv |eprint=1508.06576 |class=cs.CV |first1=Leon A. |last1=Gatys |first2=Alexander S. |last2=Ecker |title=A Neural Algorithm of Artistic Style |date=26 August 2015 |first3=Matthias |last3=Bethge}}</ref> both of which were based on pretrained image classification neural networks, such as [[VGG-19]].

[[Generative adversarial network]] (GAN) by ([[Ian Goodfellow]] et al., 2014)<ref name="GANnips">{{cite conference |last1=Goodfellow |first1=Ian |last2=Pouget-Abadie |first2=Jean |last3=Mirza |first3=Mehdi |last4=Xu |first4=Bing |last5=Warde-Farley |first5=David |last6=Ozair |first6=Sherjil |last7=Courville |first7=Aaron |last8=Bengio |first8=Yoshua |year=2014 |title=Generative Adversarial Networks |url=https://papers.nips.cc/paper/5423-generative-adversarial-nets.pdf |conference=Proceedings of the International Conference on Neural Information Processing Systems (NIPS 2014) |pages=2672–2680 |archive-url=https://web.archive.org/web/20191122034612/http://papers.nips.cc/paper/5423-generative-adversarial-nets.pdf |archive-date=22 November 2019 |access-date=20 August 2019 |url-status=live}}</ref> (based on  [[Jürgen Schmidhuber]]'s principle of artificial curiosity<ref name="curiosity1991"/><ref name="gancurpm2020"/>)
became state of the art in generative modeling during 2014-2018 period. Excellent image quality is achieved by [[Nvidia]]'s [[StyleGAN]] (2018)<ref name="SyncedReview2018">{{Cite web |date=December 14, 2018 |title=GAN 2.0: NVIDIA's Hyperrealistic Face Generator |url=https://syncedreview.com/2018/12/14/gan-2-0-nvidias-hyperrealistic-face-generator/ |access-date=October 3, 2019 |website=SyncedReview.com}}</ref> based on the Progressive GAN by Tero Karras et al.<ref name="progressiveGAN2017">{{cite arXiv |eprint=1710.10196 |class=cs.NE |first1=T. |last1=Karras |first2=T. |last2=Aila |title=Progressive Growing of GANs for Improved Quality, Stability, and Variation |date=26 February 2018 |last3=Laine |first3=S. |last4=Lehtinen |first4=J.}}</ref> Here the GAN generator is grown from small to large scale in a pyramidal fashion. Image generation by GAN reached popular success, and provoked discussions concerning [[deepfake]]s.<ref>{{Cite web |title=Prepare, Don't Panic: Synthetic Media and Deepfakes |url=https://lab.witness.org/projects/synthetic-media-and-deep-fakes/ |url-status=live |archive-url=https://web.archive.org/web/20201202231744/https://lab.witness.org/projects/synthetic-media-and-deep-fakes/ |archive-date=2 December 2020 |access-date=25 November 2020 |publisher=witness.org}}</ref>  [[Diffusion model]]s (2015)<ref>{{Cite journal |last1=Sohl-Dickstein |first1=Jascha |last2=Weiss |first2=Eric |last3=Maheswaranathan |first3=Niru |last4=Ganguli |first4=Surya |date=2015-06-01 |title=Deep Unsupervised Learning using Nonequilibrium Thermodynamics |url=http://proceedings.mlr.press/v37/sohl-dickstein15.pdf |journal=Proceedings of the 32nd International Conference on Machine Learning |language=en |publisher=PMLR |volume=37 |pages=2256–2265|arxiv=1503.03585 }}</ref> eclipsed GANs in generative modeling since then, with systems such as [[DALL-E|DALL·E 2]] (2022) and [[Stable Diffusion]] (2022).

In 2015, Google's speech recognition improved by 49% by an LSTM-based model, which they made available through [[Google Voice Search]] on [[smartphone]].<ref name="GoogleVoiceTranscription">Google Research Blog. The neural networks behind Google Voice transcription. August 11, 2015. By Françoise Beaufays http://googleresearch.blogspot.co.at/2015/08/the-neural-networks-behind-google-voice.html</ref><ref name="sak2015">{{Cite web |last1=Sak |first1=Haşim |last2=Senior |first2=Andrew |last3=Rao |first3=Kanishka |last4=Beaufays |first4=Françoise |last5=Schalkwyk |first5=Johan |date=September 2015 |title=Google voice search: faster and more accurate |url=http://googleresearch.blogspot.ch/2015/09/google-voice-search-faster-and-more.html |url-status=live |archive-url=https://web.archive.org/web/20160309191532/http://googleresearch.blogspot.ch/2015/09/google-voice-search-faster-and-more.html |archive-date=2016-03-09 |access-date=2016-04-09}}</ref>
 
Deep learning is part of state-of-the-art systems in various disciplines, particularly computer vision and [[automatic speech recognition]] (ASR). Results on commonly used evaluation sets such as [[TIMIT]] (ASR) and [[MNIST database|MNIST]] ([[image classification]]), as well as a range of large-vocabulary speech recognition tasks have steadily improved.<ref name="HintonDengYu2012" /><ref>{{Cite book |last1=Singh |first1=Premjeet |title=2021 International Conference on Computer Communication and Informatics (ICCCI) |last2=Saha |first2=Goutam |last3=Sahidullah |first3=Md |year=2021 |isbn=978-1-7281-5875-4 |pages=1–4 |chapter=Non-linear frequency warping using constant-Q transformation for speech emotion recognition |doi=10.1109/ICCCI50826.2021.9402569 |arxiv=2102.04029 |s2cid=231846518}}</ref> Convolutional neural networks were superseded for ASR by [[LSTM]].<ref name="sak2015" /><ref name="sak2014">{{Cite web |last1=Sak |first1=Hasim |last2=Senior |first2=Andrew |last3=Beaufays |first3=Francoise |date=2014 |title=Long Short-Term Memory recurrent neural network architectures for large scale acoustic modeling |url=https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43905.pdf |url-status=dead |archive-url=https://web.archive.org/web/20180424203806/https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43905.pdf |archive-date=24 April 2018}}</ref><ref name="liwu2015">{{cite arXiv |eprint=1410.4281 |class=cs.CL |first1=Xiangang |last1=Li |first2=Xihong |last2=Wu |title=Constructing Long Short-Term Memory based Deep Recurrent Neural Networks for Large Vocabulary Speech Recognition |year=2014}}</ref><ref name="zen2015">{{Cite web |last1=Zen |first1=Heiga |last2=Sak |first2=Hasim |date=2015 |title=Unidirectional Long Short-Term Memory Recurrent Neural Network with Recurrent Output Layer for Low-Latency Speech Synthesis |url=https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43266.pdf |url-status=live |archive-url=https://web.archive.org/web/20210509123113/https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43266.pdf |archive-date=2021-05-09 |access-date=2017-06-13 |website=Google.com |publisher=ICASSP |pages=4470–4474}}</ref> but are more successful in computer vision.

[[Yoshua Bengio]], [[Geoffrey Hinton]] and [[Yann LeCun]] were awarded the 2018 [[Turing Award]] for "conceptual and engineering breakthroughs that have made deep neural networks a critical component of computing".<ref>{{Cite web |title=2018 ACM A.M. Turing Award Laureates |url=https://awards.acm.org/about/2018-turing |access-date=2024-08-07 |website=awards.acm.org |language=en}}</ref>

== Neural networks ==
{{Main|Artificial neural network}}

{{multiple image
   | direction = horizontal
   | total_width = 400
   | footer    = 
   | image1    = Simplified neural network training example.svg
   | alt1      = 
   | caption1  = Simplified example of training a neural network in object detection: The network is trained by multiple images that are known to depict [[starfish]] and [[sea urchin]]s, which are correlated with "nodes" that represent visual [[Feature (computer vision)|features]]. The starfish match with a ringed texture and a star outline, whereas most sea urchins match with a striped texture and oval shape. However, the instance of a ring textured sea urchin creates a weakly weighted association between them.
   | image2    = Simplified neural network example.svg
   | alt2      = 
   | caption2  = Subsequent run of the network on an input image (left):<ref>{{cite book|author=Ferrie, C., & Kaiser, S.|year=2019|title=Neural Networks for Babies|publisher=Sourcebooks|isbn=978-1492671206}}</ref> The network correctly detects the starfish. However, the weakly weighted association between ringed texture and sea urchin also confers a weak signal to the latter from one of two intermediate nodes. In addition, a [[Seashell|shell]] that was not included in the training gives a weak signal for the oval shape, also resulting in a weak signal for the sea urchin output. These weak signals may result in a [[false positive]] result for sea urchin.<br>In reality, textures and outlines would not be represented by single nodes, but rather by associated weight patterns of multiple nodes.}}
'''Artificial neural networks''' ('''ANNs''') or '''[[Connectionism|connectionist]] systems''' are computing systems inspired by the [[biological neural network]]s that constitute animal brains. Such systems learn (progressively improve their ability) to do tasks by considering examples, generally without task-specific programming. For example, in image recognition, they might learn to identify images that contain cats by analyzing example images that have been manually [[Labeled data|labeled]] as "cat" or "no cat" and using the analytic results to identify cats in other images. They have found most use in applications difficult to express with a traditional computer algorithm using [[rule-based programming]].

An ANN is based on a collection of connected units called [[artificial neuron]]s, (analogous to biological [[neuron]]s in a [[Brain|biological brain]]). Each connection ([[synapse]]) between neurons can transmit a signal to another neuron. The receiving (postsynaptic) neuron can process the signal(s) and then signal downstream neurons connected to it. Neurons may have state, generally represented by [[real numbers]], typically between 0 and 1. Neurons and synapses may also have a weight that varies as learning proceeds, which can increase or decrease the strength of the signal that it sends downstream.

Typically, neurons are organized in layers. Different layers may perform different kinds of transformations on their inputs. Signals travel from the first (input), to the last (output) layer, possibly after traversing the layers multiple times.

The original goal of the neural network approach was to solve problems in the same way that a human brain would. Over time, attention focused on matching specific mental abilities, leading to deviations from biology such as [[backpropagation]], or passing information in the reverse direction and adjusting the network to reflect that information.

Neural networks have been used on a variety of tasks, including computer vision, [[speech recognition]], [[machine translation]], [[social network]] filtering, [[general game playing|playing board and video games]] and medical diagnosis.

As of 2017, neural networks typically have a few thousand to a few million units and millions of connections. Despite this number being several order of magnitude less than the number of neurons on a human brain, these networks can perform many tasks at a level beyond that of humans (e.g., recognizing faces, or playing "Go"<ref>{{Cite journal|last1=Silver|first1=David|last2=Huang|first2=Aja|last3=Maddison|first3=Chris J.|last4=Guez|first4=Arthur|last5=Sifre|first5=Laurent|last6=Driessche|first6=George van den|last7=Schrittwieser|first7=Julian|last8=Antonoglou|first8=Ioannis|last9=Panneershelvam|first9=Veda|s2cid=515925|date=January 2016|title=Mastering the game of Go with deep neural networks and tree search|journal=Nature|volume=529|issue=7587|pages=484–489|doi=10.1038/nature16961|issn=1476-4687|pmid=26819042|bibcode=2016Natur.529..484S}}</ref>).

=== Deep neural networks ===
A deep neural network (DNN) is an artificial neural network with multiple layers between the input and output layers.<ref name="BENGIODEEP" /><ref name="SCHIDHUB" /> There are different types of neural networks but they always consist of the same components: neurons, synapses, weights, biases, and functions.<ref name="Nokkada">{{citation |title=A Guide to Deep Learning and Neural Networks |url=https://serokell.io/blog/deep-learning-and-neural-network-guide#components-of-neural-networks |access-date=2020-11-16 |archive-date=2020-11-02 |archive-url=https://web.archive.org/web/20201102151103/https://serokell.io/blog/deep-learning-and-neural-network-guide#components-of-neural-networks |url-status=live }}</ref> These components as a whole function in a way that mimics functions of the human brain, and can be trained like any other ML algorithm.{{Citation needed|date=November 2020}}

For example, a DNN that is trained to recognize dog breeds will go over the given image and calculate the probability that the dog in the image is a certain breed. The user can review the results and select which probabilities the network should display (above a certain threshold, etc.) and return the proposed label. Each mathematical manipulation as such is considered a layer, <ref name="Kumar2021">{{cite journal  | last1 = Kumar  | first1 = Nishant  | last2 = Raubal | first2 = Martin | title = Applications of deep learning in congestion detection, prediction and alleviation: A survey  | journal = Transportation Research Part C: Emerging Technologies  | volume = 133  | pages = 103432  | year = 2021 | doi = 10.1016/j.trc.2021.103432  | hdl = 10230/42143  | s2cid = 240420107 | doi-access = free  | arxiv = 2102.09759 | bibcode = 2021TRPC..13303432K | hdl-access = free  }}</ref> and complex DNN have many layers, hence the name "deep" networks. 

DNNs can model complex non-linear relationships. DNN architectures generate compositional models where the object is expressed as a layered composition of [[Primitive data type|primitives]].<ref>{{Cite journal|last1=Szegedy|first1=Christian|last2=Toshev|first2=Alexander|last3=Erhan|first3=Dumitru|date=2013|title=Deep neural networks for object detection|url=https://papers.nips.cc/paper/5207-deep-neural-networks-for-object-detection|journal=Advances in Neural Information Processing Systems|pages=2553–2561|access-date=2017-06-13|archive-date=2017-06-29|archive-url=https://web.archive.org/web/20170629172111/http://papers.nips.cc/paper/5207-deep-neural-networks-for-object-detection|url-status=live}}</ref> The extra layers enable composition of features from lower layers, potentially modeling complex data with fewer units than a similarly performing shallow network.<ref name="BENGIODEEP"/> For instance, it was proved that sparse [[multivariate polynomial]]s are exponentially easier to approximate with DNNs than with shallow networks.<ref name="rolnickpaper">{{cite conference|last1=Rolnick|first1=David|last2=Tegmark|first2=Max|date=2018|title=The power of deeper networks for expressing natural functions|url=https://openreview.net/pdf?id=SyProzZAW|conference=ICLR 2018|book-title=International Conference on Learning Representations|access-date=2021-01-05|archive-date=2021-01-07|archive-url=https://web.archive.org/web/20210107183647/https://openreview.net/pdf?id=SyProzZAW|url-status=live}}</ref>

Deep architectures include many variants of a few basic approaches. Each architecture has found success in specific domains. It is not always possible to compare the performance of multiple architectures, unless they have been evaluated on the same data sets.<ref name="Kumar2021"/>

DNNs are typically feedforward networks in which data flows from the input layer to the output layer without looping back. At first, the DNN creates a map of virtual neurons and assigns random numerical values, or "weights", to connections between them. The weights and inputs are multiplied and return an output between 0 and 1. If the network did not accurately recognize a particular pattern, an algorithm would adjust the weights.<ref>{{Cite news|last=Hof|first=Robert D.|title=Is Artificial Intelligence Finally Coming into Its Own?|work=MIT Technology Review|url=https://www.technologyreview.com/s/513696/deep-learning/|access-date=10 July 2018|archive-url=https://web.archive.org/web/20190331092832/https://www.technologyreview.com/s/513696/deep-learning/|archive-date=31 March 2019}}</ref> That way the algorithm can make certain parameters more influential, until it determines the correct mathematical manipulation to fully process the data.

[[Recurrent neural networks]], in which data can flow in any direction, are used for applications such as [[language model]]ing.<ref name="gers2001">{{cite journal|last1=Gers|first1=Felix A.|last2=Schmidhuber|first2=Jürgen|year=2001|title=LSTM Recurrent Networks Learn Simple Context Free and Context Sensitive Languages|url=http://elartu.tntu.edu.ua/handle/lib/30719|journal=IEEE Transactions on Neural Networks|volume=12|issue=6|pages=1333–1340|doi=10.1109/72.963769|pmid=18249962|s2cid=10192330 |access-date=2020-02-25|archive-date=2020-01-26|archive-url=https://web.archive.org/web/20200126045722/http://elartu.tntu.edu.ua/handle/lib/30719|url-status=live}}</ref><ref name="NIPS2014"/><ref name="vinyals2016">{{cite arXiv |eprint=1602.02410|last1=Jozefowicz|first1=Rafal|title=Exploring the Limits of Language Modeling|last2=Vinyals|first2=Oriol|last3=Schuster|first3=Mike|last4=Shazeer|first4=Noam|last5=Wu|first5=Yonghui|class=cs.CL|year=2016}}</ref><ref name="gillick2015">{{cite arXiv |eprint=1512.00103|last1=Gillick|first1=Dan|title=Multilingual Language Processing from Bytes|last2=Brunk|first2=Cliff|last3=Vinyals|first3=Oriol|last4=Subramanya|first4=Amarnag|class=cs.CL|year=2015}}</ref><ref name="MIKO2010">{{Cite journal|last=Mikolov|first=T.|display-authors=etal|date=2010|title=Recurrent neural network based language model|url=http://www.fit.vutbr.cz/research/groups/speech/servite/2010/rnnlm_mikolov.pdf|journal=Interspeech|pages=1045–1048|doi=10.21437/Interspeech.2010-343|s2cid=17048224 |access-date=2017-06-13|archive-date=2017-05-16|archive-url=https://web.archive.org/web/20170516181940/http://www.fit.vutbr.cz/research/groups/speech/servite/2010/rnnlm_mikolov.pdf|url-status=live}}</ref> Long short-term memory is particularly effective for this use.<ref name=":0">{{Cite journal |last1=Hochreiter |first1=Sepp |last2=Schmidhuber |first2=Jürgen |date=1 November 1997 |title=Long Short-Term Memory |journal=Neural Computation |volume=9 |issue=8 |pages=1735–1780 |doi=10.1162/neco.1997.9.8.1735 |issn=0899-7667 |pmid=9377276 |s2cid=1915014}}</ref><ref name=":10">{{Cite web|url=https://www.researchgate.net/publication/220320057|title=Learning Precise Timing with LSTM Recurrent Networks (PDF Download Available)|website=ResearchGate|access-date=13 June 2017|archive-date=9 May 2021|archive-url=https://web.archive.org/web/20210509123147/https://www.researchgate.net/publication/220320057_Learning_Precise_Timing_with_LSTM_Recurrent_Networks|url-status=live}}</ref>

[[Convolutional neural network]]s (CNNs) are used in computer vision.<ref name="LECUN86">{{cite journal |last1=LeCun |first1=Y. |display-authors=etal |year= 1998|title=Gradient-based learning applied to document recognition |journal=Proceedings of the IEEE |volume=86 |issue=11 |pages=2278–2324 |doi=10.1109/5.726791|s2cid=14542261 |url=http://elartu.tntu.edu.ua/handle/lib/38369 }}</ref> CNNs also have been applied to [[acoustic model]]ing for automatic speech recognition (ASR).<ref name=":2">{{Cite book |doi=10.1109/icassp.2013.6639347|isbn=978-1-4799-0356-6|chapter=Deep convolutional neural networks for LVCSR|title=2013 IEEE International Conference on Acoustics, Speech and Signal Processing|pages=8614–8618|year=2013|last1=Sainath|first1=Tara N.|author1-link= Tara Sainath |last2=Mohamed|first2=Abdel-Rahman|last3=Kingsbury|first3=Brian|last4=Ramabhadran|first4=Bhuvana|author4-link=Bhuvana Ramabhadran|s2cid=13816461}}</ref>

==== Challenges ====
As with ANNs, many issues can arise with naively trained DNNs. Two common issues are [[overfitting]] and computation time.

DNNs are prone to overfitting because of the added layers of abstraction, which allow them to model rare dependencies in the training data. [[Regularization (mathematics)|Regularization]] methods such as Ivakhnenko's unit pruning<ref name="ivak1971"/> or [[weight decay]] (<math> \ell_2 </math>-regularization) or [[sparse matrix|sparsity]] (<math> \ell_1 </math>-regularization) can be applied during training to combat overfitting.<ref>{{Cite book |doi=10.1109/icassp.2013.6639349|isbn=978-1-4799-0356-6|arxiv=1212.0901|citeseerx=10.1.1.752.9151|chapter=Advances in optimizing recurrent networks|title=2013 IEEE International Conference on Acoustics, Speech and Signal Processing|pages=8624–8628|year=2013|last1=Bengio|first1=Yoshua|last2=Boulanger-Lewandowski|first2=Nicolas|last3=Pascanu|first3=Razvan|s2cid=12485056}}</ref> Alternatively [[Dropout (neural networks)|dropout]] regularization randomly omits units from the hidden layers during training. This helps to exclude rare dependencies.<ref name="DAHL2013">{{Cite journal|last=Dahl|first=G.|display-authors=etal|date=2013|title=Improving DNNs for LVCSR using rectified linear units and dropout|url=http://www.cs.toronto.edu/~gdahl/papers/reluDropoutBN_icassp2013.pdf|journal=ICASSP|access-date=2017-06-13|archive-date=2017-08-12|archive-url=https://web.archive.org/web/20170812140509/http://www.cs.toronto.edu/~gdahl/papers/reluDropoutBN_icassp2013.pdf|url-status=live}}</ref> Another interesting recent development is research into models of just enough complexity through an estimation of the intrinsic complexity of the task being modelled. This approach has been successfully applied for multivariate time series prediction tasks such as traffic prediction.<ref name="Kumar2024">{{cite journal| last1 = Kumar | first1 = Nishant | last2 = Martin | first2 = Henry | last3 = Raubal | first3 = Martin | title = Enhancing Deep Learning-Based City-Wide Traffic Prediction Pipelines Through Complexity Analysis | journal = Data Science for Transportation | volume = 6 | pages = Article 24| year = 2024
| issue = 3 | doi = 10.1007/s42421-024-00109-x| doi-access = free| hdl = 20.500.11850/695425 | hdl-access = free }}</ref> Finally, data can be augmented via methods such as cropping and rotating such that smaller training sets can be increased in size to reduce the chances of overfitting.<ref>{{Cite web|url=https://www.coursera.org/learn/convolutional-neural-networks/lecture/AYzbX/data-augmentation|title=Data Augmentation - deeplearning.ai {{!}} Coursera|website=Coursera|access-date=30 November 2017|archive-date=1 December 2017|archive-url=https://web.archive.org/web/20171201032606/https://www.coursera.org/learn/convolutional-neural-networks/lecture/AYzbX/data-augmentation|url-status=live}}</ref>

DNNs must consider many training parameters, such as the size (number of layers and number of units per layer), the [[learning rate]], and initial weights. [[Hyperparameter optimization#Grid search|Sweeping through the parameter space]] for optimal parameters may not be feasible due to the cost in time and computational resources. Various tricks, such as [[Batch learning|batching]] (computing the gradient on several training examples at once rather than individual examples)<ref name="RBMTRAIN">{{Cite journal|last=Hinton|first=G. E.|date=2010|title=A Practical Guide to Training Restricted Boltzmann Machines|url=https://www.researchgate.net/publication/221166159|journal=Tech. Rep. UTML TR 2010-003|access-date=2017-06-13|archive-date=2021-05-09|archive-url=https://web.archive.org/web/20210509123211/https://www.researchgate.net/publication/221166159_A_brief_introduction_to_Weightless_Neural_Systems|url-status=live}}</ref> speed up computation. Large processing capabilities of many-core architectures (such as GPUs or the Intel Xeon Phi) have produced significant speedups in training, because of the suitability of such processing architectures for the matrix and vector computations.<ref>{{cite book|last1=You|first1=Yang|title=Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis on - SC '17|pages=1–12|last2=Buluç|first2=Aydın|last3=Demmel|first3=James|chapter=Scaling deep learning on GPU and knights landing clusters|chapter-url=https://dl.acm.org/citation.cfm?doid=3126908.3126912|publisher=SC '17, ACM|date=November 2017|access-date=5 March 2018|doi=10.1145/3126908.3126912|isbn=9781450351140|s2cid=8869270|url=http://www.escholarship.org/uc/item/6ch40821|archive-date=29 July 2020|archive-url=https://web.archive.org/web/20200729133850/https://escholarship.org/uc/item/6ch40821|url-status=live}}</ref><ref>{{cite journal|last1=Viebke|first1=André|last2=Memeti|first2=Suejb|last3=Pllana|first3=Sabri|last4=Abraham|first4=Ajith|s2cid=14135321|title=CHAOS: a parallelization scheme for training convolutional neural networks on Intel Xeon Phi|journal=The Journal of Supercomputing|volume=75|pages=197–227|doi=10.1007/s11227-017-1994-x|arxiv=1702.07908|bibcode=2017arXiv170207908V|year=2019}}</ref>

Alternatively, engineers may look for other types of neural networks with more straightforward and convergent training algorithms. CMAC ([[cerebellar model articulation controller]]) is one such kind of neural network. It doesn't require learning rates or randomized initial weights. The training process can be guaranteed to converge in one step with a new batch of data, and the computational complexity of the training algorithm is linear with respect to the number of neurons involved.<ref name=Qin1>Ting Qin, et al. "A learning algorithm of CMAC based on RLS". Neural Processing Letters 19.1 (2004): 49-61.</ref><ref name=Qin2>Ting Qin, et al. "[http://www-control.eng.cam.ac.uk/Homepage/papers/cued_control_997.pdf Continuous CMAC-QRLS and its systolic array]". {{Webarchive|url=https://web.archive.org/web/20181118122850/http://www-control.eng.cam.ac.uk/Homepage/papers/cued_control_997.pdf |date=2018-11-18 }}. Neural Processing Letters 22.1 (2005): 1-16.</ref>

== Hardware ==
Since the 2010s, advances in both machine learning algorithms and [[computer hardware]] have led to more efficient methods for training deep neural networks that contain many layers of non-linear hidden units and a very large output layer.<ref>{{cite web|last1=Research|first1=AI|title=Deep Neural Networks for Acoustic Modeling in Speech Recognition|url=http://airesearch.com/ai-research-papers/deep-neural-networks-for-acoustic-modeling-in-speech-recognition/|website=airesearch.com|access-date=23 October 2015|date=23 October 2015|archive-date=1 February 2016|archive-url=https://web.archive.org/web/20160201033801/http://airesearch.com/ai-research-papers/deep-neural-networks-for-acoustic-modeling-in-speech-recognition/|url-status=live}}</ref> By 2019, graphics processing units (GPUs), often with AI-specific enhancements, had displaced CPUs as the dominant method for training large-scale commercial cloud AI .<ref>{{cite news |title=GPUs Continue to Dominate the AI Accelerator Market for Now |url=https://www.informationweek.com/big-data/ai-machine-learning/gpus-continue-to-dominate-the-ai-accelerator-market-for-now/a/d-id/1336475 |access-date=11 June 2020 |work=InformationWeek |date=December 2019 |language=en |archive-date=10 June 2020 |archive-url=https://web.archive.org/web/20200610094310/https://www.informationweek.com/big-data/ai-machine-learning/gpus-continue-to-dominate-the-ai-accelerator-market-for-now/a/d-id/1336475 |url-status=live }}</ref> [[OpenAI]] estimated the hardware computation used in the largest deep learning projects from AlexNet (2012) to AlphaZero (2017) and found a 300,000-fold increase in the amount of computation required, with a doubling-time trendline of 3.4 months.<ref>{{cite news |last1=Ray |first1=Tiernan |title=AI is changing the entire nature of computation |url=https://www.zdnet.com/article/ai-is-changing-the-entire-nature-of-compute/ |access-date=11 June 2020 |work=ZDNet |date=2019 |language=en |archive-date=25 May 2020 |archive-url=https://web.archive.org/web/20200525144635/https://www.zdnet.com/article/ai-is-changing-the-entire-nature-of-compute/ |url-status=live }}</ref><ref>{{cite web |title=AI and Compute |url=https://openai.com/blog/ai-and-compute/ |website=OpenAI |access-date=11 June 2020 |language=en |date=16 May 2018 |archive-date=17 June 2020 |archive-url=https://web.archive.org/web/20200617200602/https://openai.com/blog/ai-and-compute/ |url-status=live }}</ref>

Special [[electronic circuit]]s called [[deep learning processor]]s were designed to speed up deep learning algorithms. Deep learning processors include neural processing units (NPUs) in [[Huawei]] cellphones<ref>{{Cite web|url=https://consumer.huawei.com/en/press/news/2017/ifa2017-kirin970/|title=HUAWEI Reveals the Future of Mobile AI at IFA 2017 &#124; HUAWEI Latest News &#124; HUAWEI Global|website=consumer.huawei.com}}</ref> and [[cloud computing]] servers such as [[tensor processing unit]]s (TPU) in the [[Google Cloud Platform]].<ref>{{Cite journal|last1=P|first1=JouppiNorman|last2=YoungCliff|last3=PatilNishant|last4=PattersonDavid|last5=AgrawalGaurav|last6=BajwaRaminder|last7=BatesSarah|last8=BhatiaSuresh|last9=BodenNan|last10=BorchersAl|last11=BoyleRick|date=2017-06-24|title=In-Datacenter Performance Analysis of a Tensor Processing Unit|journal=ACM SIGARCH Computer Architecture News|volume=45|issue=2|pages=1–12|language=EN|doi=10.1145/3140659.3080246|doi-access=free|arxiv=1704.04760}}</ref> [[Cerebras|Cerebras Systems]] has also built a dedicated system to handle large deep learning models, the CS-2, based on the largest processor in the industry, the second-generation Wafer Scale Engine (WSE-2).<ref>{{Cite web |last=Woodie |first=Alex |date=2021-11-01 |title=Cerebras Hits the Accelerator for Deep Learning Workloads |url=https://www.datanami.com/2021/11/01/cerebras-hits-the-accelerator-for-deep-learning-workloads/ |access-date=2022-08-03 |website=Datanami}}</ref><ref>{{Cite web |date=2021-04-20 |title=Cerebras launches new AI supercomputing processor with 2.6 trillion transistors |url=https://venturebeat.com/2021/04/20/cerebras-systems-launches-new-ai-supercomputing-processor-with-2-6-trillion-transistors/ |access-date=2022-08-03 |website=VentureBeat |language=en-US}}</ref>

Atomically thin [[semiconductors]] are considered promising for energy-efficient deep learning hardware where the same basic device structure is used for both logic operations and data storage.
In 2020, Marega et al. published experiments with a large-area active channel material for developing logic-in-memory devices and circuits based on [[floating-gate]] [[field-effect transistor]]s (FGFETs).<ref name="atomthin">{{cite journal|title=Logic-in-memory based on an atomically thin semiconductor|year=2020|doi=10.1038/s41586-020-2861-0|last1=Marega|first1=Guilherme Migliato|last2=Zhao|first2=Yanfei|last3=Avsar|first3=Ahmet|last4=Wang|first4=Zhenyu|last5=Tripati|first5=Mukesh|last6=Radenovic|first6=Aleksandra|last7=Kis|first7=Anras|journal=Nature|volume=587|issue=2|pages=72–77|pmid=33149289|pmc=7116757|bibcode=2020Natur.587...72M }}</ref>

In 2021, J. Feldmann et al. proposed an integrated [[photonic]] [[hardware accelerator]] for parallel convolutional processing.<ref name="photonic">{{cite journal |title=Parallel convolutional processing using an integrated photonic tensor |year=2021 |doi=10.1038/s41586-020-03070-1 |last1=Feldmann |first1=J. |last2=Youngblood|first2=N. |last3=Karpov |first3=M. | last4=Gehring |first4=H. | display-authors=3 | journal=Nature |volume=589 |issue=2 |pages=52–58|pmid=33408373 |arxiv=2002.00281 |s2cid=211010976 }}</ref> The authors identify two key advantages of integrated photonics over its electronic counterparts: (1) massively parallel data transfer through [[wavelength]] division [[multiplexing]] in conjunction with [[frequency comb]]s, and (2) extremely high data modulation speeds.<ref name="photonic"/> Their system can execute trillions of multiply-accumulate operations per second, indicating the potential of [[Photonic integrated circuit|integrated]] [[photonics]] in data-heavy AI applications.<ref name="photonic"/>

== Applications ==

=== Automatic speech recognition ===
{{Main|Speech recognition}}

Large-scale automatic speech recognition is the first and most convincing successful case of deep learning. LSTM RNNs can learn "Very Deep Learning" tasks<ref name="SCHIDHUB"/> that involve multi-second intervals containing speech events separated by thousands of discrete time steps, where one time step corresponds to about 10 ms. LSTM with forget gates<ref name=":10" /> is competitive with traditional speech recognizers on certain tasks.<ref name="graves2003"/>

The initial success in speech recognition was based on small-scale recognition tasks based on TIMIT. The data set contains 630 speakers from eight major [[dialect]]s of [[American English]], where each speaker reads 10 sentences.<ref name=APC_1>{{cite book| title=TIMIT Acoustic-Phonetic Continuous Speech Corpus| author1=Garofolo, J.S.| author2=Lamel, L.F.| author3=Fisher, W.M.| author4=Fiscus, J.G.| author5=Pallett, D.S.| author6=Dahlgren, N.L.| author7=Zue, V.| url=https://catalog.ldc.upenn.edu/LDC93S1| publisher=Linguistic Data Consortium| date=1993| access-date=27 December 2023| doi=10.35111/17gk-bn40| isbn=1-58563-019-5}}</ref> Its small size lets many configurations be tried. More importantly, the TIMIT task concerns [[Phone (phonetics)|phone]]-sequence recognition, which, unlike word-sequence recognition, allows weak phone [[bigram]] language models. This lets the strength of the acoustic modeling aspects of speech recognition be more easily analyzed. The error rates listed below, including these early results and measured as percent phone error rates (PER), have been summarized since 1991.

{| class="wikitable"
|-
! Method !! Percent phone<br>error rate (PER) (%)
|-
| Randomly Initialized RNN<ref>{{cite journal |last1=Robinson |first1=Tony |author-link=Tony Robinson (speech recognition)|title=Several Improvements to a Recurrent Error Propagation Network Phone Recognition System |journal=Cambridge University Engineering Department Technical Report |date=30 September 1991 |volume=CUED/F-INFENG/TR82 |doi=10.13140/RG.2.2.15418.90567 }}</ref>|| 26.1
|-
| Bayesian Triphone GMM-HMM || 25.6
|-
| Hidden Trajectory (Generative) Model|| 24.8
|-
| Monophone Randomly Initialized DNN|| 23.4
|-
| Monophone DBN-DNN|| 22.4
|-
| Triphone GMM-HMM with BMMI Training|| 21.7
|-
| Monophone DBN-DNN on fbank || 20.7
|-
| Convolutional DNN<ref name="CNN-2014">{{cite journal|last1=Abdel-Hamid|first1=O.|title=Convolutional Neural Networks for Speech Recognition|journal=IEEE/ACM Transactions on Audio, Speech, and Language Processing|date=2014|volume=22|issue=10|pages=1533–1545|doi=10.1109/taslp.2014.2339736|s2cid=206602362|display-authors=etal|url=https://zenodo.org/record/891433|access-date=2018-04-20|archive-date=2020-09-22|archive-url=https://web.archive.org/web/20200922180719/https://zenodo.org/record/891433|url-status=live}}</ref>|| 20.0
|-
| Convolutional DNN w. Heterogeneous Pooling|| 18.7
|-
| Ensemble DNN/CNN/RNN<ref name="EnsembleDL">{{cite journal|last2=Platt|first2=J.|date=2014|title=Ensemble Deep Learning for Speech Recognition|journal=Proc. Interspeech|last1=Deng|first1=L.|pages=1915–1919 |doi=10.21437/Interspeech.2014-433 |s2cid=15641618}}</ref>|| 18.3
|-
| Bidirectional LSTM|| 17.8
|-
| Hierarchical Convolutional Deep Maxout Network<ref name="HCDMM">{{cite journal|last1=Tóth|first1=Laszló|date=2015|title=Phone Recognition with Hierarchical Convolutional Deep Maxout Networks|journal=EURASIP Journal on Audio, Speech, and Music Processing|volume=2015|doi=10.1186/s13636-015-0068-3|s2cid=217950236|url=http://publicatio.bibl.u-szeged.hu/5976/1/EURASIP2015.pdf|access-date=2019-04-01|archive-date=2020-09-24|archive-url=https://web.archive.org/web/20200924085514/http://publicatio.bibl.u-szeged.hu/5976/1/EURASIP2015.pdf|url-status=live |doi-access=free }}</ref> || 16.5
|}

The debut of DNNs for speaker recognition in the late 1990s and speech recognition around 2009-2011 and of LSTM around 2003–2007, accelerated progress in eight major areas:<ref name="BOOK2014" /><ref name="interspeech2014Keynote" /><ref name="ReferenceA" />

* Scale-up/out and accelerated DNN training and decoding
* Sequence discriminative training
* Feature processing by deep models with solid understanding of the underlying mechanisms
* Adaptation of DNNs and related deep models
* [[Multi-task learning|Multi-task]] and [[transfer learning]] by DNNs and related deep models
* [[Convolutional neural network|CNNs]] and how to design them to best exploit [[domain knowledge]] of speech
* [[Recurrent neural network|RNN]] and its rich LSTM variants
* Other types of deep models including tensor-based models and integrated deep generative/discriminative models.

All major commercial speech recognition systems (e.g., Microsoft [[Cortana (software)|Cortana]], [[Xbox]], [[Skype Translator]], [[Amazon Alexa]], [[Google Now]], [[Siri|Apple Siri]], [[Baidu]] and [[IFlytek|iFlyTek]] voice search, and a range of [[Nuance Communications|Nuance]] speech products, etc.) are based on deep learning.<ref name=BOOK2014 /><ref>{{Cite magazine|url=https://www.wired.com/2014/12/skype-used-ai-build-amazing-new-language-translator/|title=How Skype Used AI to Build Its Amazing New Language Translator {{!}} WIRED|magazine=Wired|access-date=14 June 2017|date=17 December 2014|last1=McMillan|first1=Robert|archive-date=8 June 2017|archive-url=https://web.archive.org/web/20170608062106/https://www.wired.com/2014/12/skype-used-ai-build-amazing-new-language-translator/|url-status=live}}</ref><ref name="Baidu">{{cite arXiv |eprint=1412.5567|last1=Hannun|first1=Awni|title=Deep Speech: Scaling up end-to-end speech recognition|last2=Case|first2=Carl|last3=Casper|first3=Jared|last4=Catanzaro|first4=Bryan|last5=Diamos|first5=Greg|last6=Elsen|first6=Erich|last7=Prenger|first7=Ryan|last8=Satheesh|first8=Sanjeev|last9=Sengupta|first9=Shubho|last10=Coates|first10=Adam|last11=Ng|first11=Andrew Y|class=cs.CL|year=2014}}</ref>

=== Image recognition ===
{{Main|Computer vision}}
[[File:Deep Learning in mussel farming.webm|thumb|Richard Green explains how deep learning is used with a [[Remotely operated underwater vehicle|remotely operated vehicle]] in [[Mussel#Aquaculture|mussel aquaculture]].]]
A common evaluation set for image classification is the [[MNIST database]] data set. MNIST is composed of handwritten digits and includes 60,000 training examples and 10,000 test examples. As with TIMIT, its small size lets users test multiple configurations. A comprehensive list of results on this set is available.<ref name="YANNMNIST">{{cite web|url=http://yann.lecun.com/exdb/mnist/.|title=MNIST handwritten digit database, Yann LeCun, Corinna Cortes and Chris Burges|website=yann.lecun.com|access-date=2014-01-28|archive-date=2014-01-13|archive-url=https://web.archive.org/web/20140113175237/http://yann.lecun.com/exdb/mnist/|url-status=live}}</ref>

Deep learning-based image recognition has become "superhuman", producing more accurate results than human contestants. This first occurred in 2011 in recognition of traffic signs, and in 2014, with recognition of human faces.<ref name=":7">{{Cite journal|last1=Cireşan|first1=Dan|last2=Meier|first2=Ueli|last3=Masci|first3=Jonathan|last4=Schmidhuber|first4=Jürgen|date=August 2012|title=Multi-column deep neural network for traffic sign classification|journal=Neural Networks|series=Selected Papers from IJCNN 2011|volume=32|pages=333–338|doi=10.1016/j.neunet.2012.02.023|pmid=22386783|citeseerx=10.1.1.226.8219}}</ref><ref name=surpass1>{{cite arXiv|title=Surpassing Human Level Face Recognition|author1=Chaochao Lu |author2= Xiaoou Tang |year=2014 |class=cs.CV |eprint=1404.3840 }}</ref>

Deep learning-trained vehicles now interpret 360° camera views.<ref>[http://www.technologyreview.com/news/533936/nvidia-demos-a-car-computer-trained-with-deep-learning/ Nvidia Demos a Car Computer Trained with "Deep Learning"] (6 January 2015), David Talbot, ''[[MIT Technology Review]]''</ref> Another example is Facial Dysmorphology Novel Analysis (FDNA) used to analyze cases of human malformation connected to a large database of genetic syndromes.

=== Visual art processing ===
[[File:Jimmy Wales in France, with the style of Munch's "The Scream" applied using neural style transfer.jpg|thumb|164x164px|Visual art processing of Jimmy Wales in France, with the style of Munch's "[[The Scream]]" applied using neural style transfer]]
Closely related to the progress that has been made in image recognition is the increasing application of deep learning techniques to various visual art tasks. DNNs have proven themselves capable, for example, of
*identifying the style period of a given painting<ref name = art1/><ref name = art2/>
*[[Neural Style Transfer]]{{snd}} capturing the style of a given artwork and applying it in a visually pleasing manner to an arbitrary photograph or video<ref name = art1/><ref name = art2/>
*generating striking imagery based on random visual input fields.<ref name = art1 >{{cite journal |author1=G. W. Smith|author2=Frederic Fol Leymarie|date=10 April 2017|title=The Machine as Artist: An Introduction|journal=Arts|volume=6|issue=4|pages=5|doi=10.3390/arts6020005|doi-access=free}}</ref><ref name = art2>{{cite journal |author=Blaise Agüera y Arcas|date=29 September 2017|title=Art in the Age of Machine Intelligence|journal=Arts|volume=6|issue=4|pages=18|doi=10.3390/arts6040018|doi-access=free}}</ref>

=== Natural language processing ===
{{Main|Natural language processing}}
Neural networks have been used for implementing language models since the early 2000s.<ref name="gers2001" /> LSTM helped to improve machine translation and language modeling.<ref name="NIPS2014" /><ref name="vinyals2016" /><ref name="gillick2015" />

Other key techniques in this field are negative sampling<ref name="GoldbergLevy2014">{{cite arXiv|last1=Goldberg|first1=Yoav|last2=Levy|first2=Omar|title=word2vec Explained: Deriving Mikolov et al.'s Negative-Sampling Word-Embedding Method|eprint=1402.3722|class=cs.CL|year=2014}}</ref> and [[word embedding]]. Word embedding, such as ''[[word2vec]]'', can be thought of as a representational layer in a deep learning architecture that transforms an atomic word into a positional representation of the word relative to other words in the dataset; the position is represented as a point in a [[vector space]]. Using word embedding as an RNN input layer allows the network to parse sentences and phrases using an effective compositional vector grammar. A compositional vector grammar can be thought of as [[probabilistic context free grammar]] (PCFG) implemented by an RNN.<ref name="SocherManning2014">{{cite web|last1=Socher|first1=Richard|last2=Manning|first2=Christopher|title=Deep Learning for NLP|url=http://nlp.stanford.edu/courses/NAACL2013/NAACL2013-Socher-Manning-DeepLearning.pdf|access-date=26 October 2014|archive-date=6 July 2014|archive-url=https://web.archive.org/web/20140706040227/http://nlp.stanford.edu/courses/NAACL2013/NAACL2013-Socher-Manning-DeepLearning.pdf|url-status=live}}</ref> Recursive auto-encoders built atop word embeddings can assess sentence similarity and detect paraphrasing.<ref name="SocherManning2014" /> Deep neural architectures provide the best results for constituency parsing,<ref>{{Cite journal|url = http://aclweb.org/anthology/P/P13/P13-1045.pdf|title = Parsing With Compositional Vector Grammars|last1 = Socher|first1 = Richard|date = 2013|journal = Proceedings of the ACL 2013 Conference|last2 = Bauer|first2 = John|last3 = Manning|first3 = Christopher|last4 = Ng|first4 = Andrew|access-date = 2014-09-03|archive-date = 2014-11-27|archive-url = https://web.archive.org/web/20141127005912/http://www.aclweb.org/anthology/P/P13/P13-1045.pdf|url-status = live}}</ref> [[sentiment analysis]],<ref name=RDM_1>{{cite book| title=Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing| author1=Socher, R.| author2=Perelygin, A.| author3=Wu, J.| author4=Chuang, J.| author5=Manning, C.D.| author6=Ng, A.| author7=Potts, C.| chapter=Recursive Deep Models for Semantic Compositionality over a Sentiment Treebank| chapter-url=https://nlp.stanford.edu/~socherr/EMNLP2013_RNTN.pdf| publisher=Association for Computational Linguistics| date=October 2013| pages=1631–1642| doi=10.18653/v1/D13-1170| access-date=21 December 2023| url-status = live| archive-url=https://web.archive.org/web/20161228100300/http://nlp.stanford.edu/%7Esocherr/EMNLP2013_RNTN.pdf| archive-date=28 December 2016}}</ref> information retrieval,<ref>{{Cite journal| last1=Shen| first1=Yelong| last2=He| first2=Xiaodong| last3=Gao| first3=Jianfeng|last4=Deng|first4=Li|last5=Mesnil|first5=Gregoire|date=1 November 2014|title=A Latent Semantic Model with Convolutional-Pooling Structure for Information Retrieval|url=https://www.microsoft.com/en-us/research/publication/a-latent-semantic-model-with-convolutional-pooling-structure-for-information-retrieval/|journal=Microsoft Research|access-date=14 June 2017|archive-date=27 October 2017|archive-url=https://web.archive.org/web/20171027050418/https://www.microsoft.com/en-us/research/publication/a-latent-semantic-model-with-convolutional-pooling-structure-for-information-retrieval/|url-status=live}}</ref><ref>{{Cite journal|last1=Huang|first1=Po-Sen|last2=He|first2=Xiaodong|last3=Gao|first3=Jianfeng|last4=Deng|first4=Li|last5=Acero|first5=Alex|last6=Heck|first6=Larry|date=1 October 2013|title=Learning Deep Structured Semantic Models for Web Search using Clickthrough Data|url=https://www.microsoft.com/en-us/research/publication/learning-deep-structured-semantic-models-for-web-search-using-clickthrough-data/|journal=Microsoft Research|access-date=14 June 2017|archive-date=27 October 2017|archive-url=https://web.archive.org/web/20171027050414/https://www.microsoft.com/en-us/research/publication/learning-deep-structured-semantic-models-for-web-search-using-clickthrough-data/|url-status=live}}</ref> spoken language understanding,<ref name="IEEE-TASL2015">{{cite journal | last1 = Mesnil | first1 = G. | last2 = Dauphin | first2 = Y. | last3 = Yao | first3 = K. | last4 = Bengio | first4 = Y. | last5 = Deng | first5 = L. | last6 = Hakkani-Tur | first6 = D.|author6-link=Dilek Hakkani-Tür | last7 = He | first7 = X. | last8 = Heck | first8 = L. | last9 = Tur | first9 = G. | last10 = Yu | first10 = D. | last11 = Zweig | first11 = G. | s2cid = 1317136 | year = 2015 | title = Using recurrent neural networks for slot filling in spoken language understanding | journal = IEEE Transactions on Audio, Speech, and Language Processing | volume = 23 | issue = 3| pages = 530–539 | doi=10.1109/taslp.2014.2383614}}</ref> machine translation,<ref name="NIPS2014">{{Cite journal|last1=Sutskever|first1=L.|last2=Vinyals|first2=O.|last3=Le|first3=Q.|date=2014|title=Sequence to Sequence Learning with Neural Networks|url=https://papers.nips.cc/paper/5346-sequence-to-sequence-learning-with-neural-networks.pdf|journal=Proc. NIPS|bibcode=2014arXiv1409.3215S|arxiv=1409.3215|access-date=2017-06-13|archive-date=2021-05-09|archive-url=https://web.archive.org/web/20210509123145/https://papers.nips.cc/paper/2014/file/a14ac55a4f27472c5d894ec1c3c743d2-Paper.pdf|url-status=live}}</ref><ref name="auto">{{Cite journal|last1=Gao|first1=Jianfeng|last2=He|first2=Xiaodong|last3=Yih|first3=Scott Wen-tau|last4=Deng|first4=Li|date=1 June 2014|title=Learning Continuous Phrase Representations for Translation Modeling|url=https://www.microsoft.com/en-us/research/publication/learning-continuous-phrase-representations-for-translation-modeling/|journal=Microsoft Research|access-date=14 June 2017|archive-date=27 October 2017|archive-url=https://web.archive.org/web/20171027050403/https://www.microsoft.com/en-us/research/publication/learning-continuous-phrase-representations-for-translation-modeling/|url-status=live}}</ref> contextual entity linking,<ref name="auto"/> writing style recognition,<ref name="BROC2017">{{Cite journal |doi = 10.1002/dac.3259|title = Authorship verification using deep belief network systems|journal = International Journal of Communication Systems|volume = 30|issue = 12|pages = e3259|year = 2017|last1 = Brocardo|first1 = Marcelo Luiz|last2 = Traore|first2 = Issa|last3 = Woungang|first3 = Isaac|last4 = Obaidat|first4 = Mohammad S.| s2cid=40745740 }}</ref> [[named-entity recognition]] (token classification),<ref>{{Cite journal |last1=Kariampuzha |first1=William |last2=Alyea |first2=Gioconda |last3=Qu |first3=Sue |last4=Sanjak |first4= Jaleal |last5=Mathé |first5=Ewy |last6=Sid |first6=Eric |last7= Chatelaine |first7=Haley |last8=Yadaw |first8=Arjun |last9=Xu |first9=Yanji |last10=Zhu |first10=Qian |date=2023 |title=Precision information extraction for rare disease epidemiology at scale |journal=Journal of Translational Medicine |language=en |volume=21 |issue=1 |page=157 |doi=10.1186/s12967-023-04011-y |pmid=36855134 |pmc=9972634 |doi-access=free }}</ref> text classification, and others.<ref>{{Cite news|url=https://www.microsoft.com/en-us/research/project/deep-learning-for-natural-language-processing-theory-and-practice-cikm2014-tutorial/|title=Deep Learning for Natural Language Processing: Theory and Practice (CIKM2014 Tutorial) - Microsoft Research|work=Microsoft Research|access-date=14 June 2017|archive-date=13 March 2017|archive-url=https://web.archive.org/web/20170313184253/https://www.microsoft.com/en-us/research/project/deep-learning-for-natural-language-processing-theory-and-practice-cikm2014-tutorial/|url-status=live}}</ref>

Recent developments generalize [[word embedding]] to [[sentence embedding]].

[[Google Translate]] (GT) uses a large end-to-end [[long short-term memory]] (LSTM) network.<ref name="GT_Turovsky_2016">{{cite web|url=https://blog.google/products/translate/found-translation-more-accurate-fluent-sentences-google-translate/|title=Found in translation: More accurate, fluent sentences in Google Translate|last=Turovsky|first=Barak|date=15 November 2016|website=The Keyword Google Blog|access-date=23 March 2017|archive-date=7 April 2017|archive-url=https://web.archive.org/web/20170407071226/https://blog.google/products/translate/found-translation-more-accurate-fluent-sentences-google-translate/|url-status=live}}</ref><ref name="googleblog_GNMT_2016">{{cite web|url=https://research.googleblog.com/2016/11/zero-shot-translation-with-googles.html|title=Zero-Shot Translation with Google's Multilingual Neural Machine Translation System|last1=Schuster|first1=Mike|last2=Johnson|first2=Melvin|date=22 November 2016|website=Google Research Blog|access-date=23 March 2017|last3=Thorat|first3=Nikhil|archive-date=10 July 2017|archive-url=https://web.archive.org/web/20170710183732/https://research.googleblog.com/2016/11/zero-shot-translation-with-googles.html|url-status=live}}</ref><ref name="GoogleTranslate">{{cite arXiv |eprint=1609.08144|last1=Wu|first1=Yonghui|title=Google's Neural Machine Translation System: Bridging the Gap between Human and Machine Translation|last2=Schuster|first2=Mike|last3=Chen|first3=Zhifeng|last4=Le|first4=Quoc V|last5=Norouzi|first5=Mohammad|last6=Macherey|first6=Wolfgang|last7=Krikun|first7=Maxim|last8=Cao|first8=Yuan|last9=Gao|first9=Qin|last10=Macherey|first10=Klaus|last11=Klingner|first11=Jeff|last12=Shah|first12=Apurva|last13=Johnson|first13=Melvin|last14=Liu|first14=Xiaobing|last15=Kaiser|first15=Łukasz|last16=Gouws|first16=Stephan|last17=Kato|first17=Yoshikiyo|last18=Kudo|first18=Taku|last19=Kazawa|first19=Hideto|last20=Stevens|first20=Keith|last21=Kurian|first21=George|last22=Patil|first22=Nishant|last23=Wang|first23=Wei|last24=Young|first24=Cliff|last25=Smith|first25=Jason|last26=Riesa|first26=Jason|last27=Rudnick|first27=Alex|last28=Vinyals|first28=Oriol|last29=Corrado|first29=Greg|last30=Hughes|first30=Macduff|display-authors=29|class=cs.CL|year=2016}}</ref><ref name="WiredGoogleTranslate">{{cite magazine |title=An Infusion of AI Makes Google Translate More Powerful Than Ever |first=Cade |last=Metz |magazine=[[Wired (magazine)|Wired]] |date=27 September 2016 |url=https://www.wired.com/2016/09/google-claims-ai-breakthrough-machine-translation/ |access-date=12 October 2017 |archive-date=8 November 2020 |archive-url=https://web.archive.org/web/20201108101324/https://www.wired.com/2016/09/google-claims-ai-breakthrough-machine-translation/ |url-status=live }}</ref> [[Google Neural Machine Translation|Google Neural Machine Translation (GNMT)]] uses an [[example-based machine translation]] method in which the system "learns from millions of examples".<ref name="googleblog_GNMT_2016" /> It translates "whole sentences at a time, rather than pieces". Google Translate supports over one hundred languages.<ref name="googleblog_GNMT_2016" /> The network encodes the "semantics of the sentence rather than simply memorizing phrase-to-phrase translations".<ref name="googleblog_GNMT_2016" /><ref name="Biotet">{{cite web|url=http://www-clips.imag.fr/geta/herve.blanchon/Pdfs/NLP-KE-10.pdf|title=MT on and for the Web|last1=Boitet|first1=Christian|last2=Blanchon|first2=Hervé|date=2010|access-date=1 December 2016|last3=Seligman|first3=Mark|last4=Bellynck|first4=Valérie|archive-date=29 March 2017|archive-url=https://web.archive.org/web/20170329125916/http://www-clips.imag.fr/geta/herve.blanchon/Pdfs/NLP-KE-10.pdf|url-status=dead}}</ref> GT uses English as an intermediate between most language pairs.<ref name="Biotet" />

=== Drug discovery and toxicology ===
{{For|more information|Drug discovery|Toxicology}}
A large percentage of candidate drugs fail to win regulatory approval. These failures are caused by insufficient efficacy (on-target effect), undesired interactions (off-target effects), or unanticipated [[Toxicity|toxic effects]].<ref name="ARROWSMITH2013">{{Cite journal
| pmid = 23903212
| year = 2013
| last1 = Arrowsmith
| first1 = J
| title = Trial watch: Phase II and phase III attrition rates 2011-2012
| journal = Nature Reviews Drug Discovery
| volume = 12
| issue = 8
| pages = 569
| last2 = Miller
| first2 = P
| s2cid = 20246434
| doi = 10.1038/nrd4090
| doi-access = free
}}</ref><ref name="VERBIEST2015">{{Cite journal
| pmid = 25582842
| year = 2015
| last1 = Verbist
| first1 = B
| title = Using transcriptomics to guide lead optimization in drug discovery projects: Lessons learned from the QSTAR project
| journal = Drug Discovery Today
| last2 = Klambauer
| first2 = G
| last3 = Vervoort
| first3 = L
| last4 = Talloen
| first4 = W
| last5 = The Qstar
| first5 = Consortium
| last6 = Shkedy
| first6 = Z
| last7 = Thas
| first7 = O
| last8 = Bender
| first8 = A
| last9 = Göhlmann
| first9 = H. W.
| last10 = Hochreiter
| first10 = S
| doi = 10.1016/j.drudis.2014.12.014
| volume=20
| issue = 5
| pages=505–513
| doi-access = free
| hdl = 1942/18723
| hdl-access = free
}}</ref> Research has explored use of deep learning to predict the [[biomolecular target]]s,<ref name="MERCK2012">{{Cite web |title=Merck Molecular Activity Challenge |url=https://kaggle.com/c/MerckActivity |url-status=live |archive-url=https://web.archive.org/web/20200716190808/https://www.kaggle.com/c/MerckActivity |archive-date=2020-07-16 |access-date=2020-07-16 |website=kaggle.com}}</ref><ref name=":5">{{Cite web |title=Multi-task Neural Networks for QSAR Predictions {{!}} Data Science Association |url=http://www.datascienceassn.org/content/multi-task-neural-networks-qsar-predictions |url-status=live |archive-url=https://web.archive.org/web/20170430142049/http://www.datascienceassn.org/content/multi-task-neural-networks-qsar-predictions |archive-date=30 April 2017 |access-date=14 June 2017 |website=www.datascienceassn.org}}</ref> [[off-target]]s, and [[Toxicity|toxic effects]] of environmental chemicals in nutrients, household products and drugs.<ref name="TOX21">"Toxicology in the 21st century Data Challenge"</ref><ref name="TOX21Data">{{cite web |title=NCATS Announces Tox21 Data Challenge Winners |url=https://tripod.nih.gov/tox21/challenge/leaderboard.jsp |url-status=live |archive-url=https://web.archive.org/web/20150908025122/https://tripod.nih.gov/tox21/challenge/leaderboard.jsp |archive-date=2015-09-08 |access-date=2015-03-05}}</ref><ref name=":11">{{cite web |title=NCATS Announces Tox21 Data Challenge Winners |url=http://www.ncats.nih.gov/news-and-events/features/tox21-challenge-winners.html |url-status=dead |archive-url=https://web.archive.org/web/20150228225709/http://www.ncats.nih.gov/news-and-events/features/tox21-challenge-winners.html |archive-date=28 February 2015 |access-date=5 March 2015}}</ref>

AtomNet is a deep learning system for structure-based [[Drug design|rational drug design]].<ref>{{cite arXiv|title = AtomNet: A Deep Convolutional Neural Network for Bioactivity Prediction in Structure-based Drug Discovery|eprint= 1510.02855|date = 9 October 2015|first1 = Izhar|last1 = Wallach|first2 = Michael|last2 = Dzamba|first3 = Abraham|last3 = Heifets|class= cs.LG}}</ref> AtomNet was used to predict novel candidate biomolecules for disease targets such as the [[Ebola virus]]<ref name="Toronto">{{Cite news |title = Toronto startup has a faster way to discover effective medicines |url = https://www.theglobeandmail.com/report-on-business/small-business/starting-out/toronto-startup-has-a-faster-way-to-discover-effective-medicines/article25660419/ |website = [[The Globe and Mail]] |access-date = 9 November 2015 |archive-date = 20 October 2015 |archive-url = https://web.archive.org/web/20151020040115/http://www.theglobeandmail.com/report-on-business/small-business/starting-out/toronto-startup-has-a-faster-way-to-discover-effective-medicines/article25660419/ |url-status = live }}</ref> and [[multiple sclerosis]].<ref>{{Cite web|title = Startup Harnesses Supercomputers to Seek Cures|url = http://ww2.kqed.org/futureofyou/2015/05/27/startup-harnesses-supercomputers-to-seek-cures/|website = KQED Future of You| date=27 May 2015 |access-date = 9 November 2015|archive-date = 24 December 2015|archive-url = https://web.archive.org/web/20151224104721/http://ww2.kqed.org/futureofyou/2015/05/27/startup-harnesses-supercomputers-to-seek-cures/|url-status = live}}</ref><ref name="Toronto" />

In 2017 [[graph neural network]]s were used for the first time to predict various properties of molecules in a large toxicology data set.<ref>{{cite arXiv|last1=Gilmer|first1=Justin|last2=Schoenholz|first2=Samuel S.|last3=Riley|first3=Patrick F.|last4=Vinyals|first4=Oriol|last5=Dahl|first5=George E.|date=2017-06-12|title=Neural Message Passing for Quantum Chemistry|class=cs.LG|eprint=1704.01212}}</ref> In 2019, generative neural networks were used to produce molecules that were validated experimentally all the way into mice.<ref>{{cite journal |last1=Zhavoronkov |first1=Alex|s2cid=201716327|date=2019|title=Deep learning enables rapid identification of potent DDR1 kinase inhibitors |journal=Nature Biotechnology |volume=37|issue=9|pages=1038–1040|doi=10.1038/s41587-019-0224-x |pmid=31477924}}</ref><ref>{{cite magazine |last1=Gregory |first1=Barber |title=A Molecule Designed By AI Exhibits 'Druglike' Qualities |url=https://www.wired.com/story/molecule-designed-ai-exhibits-druglike-qualities/ |magazine=Wired |access-date=2019-09-05 |archive-date=2020-04-30 |archive-url=https://web.archive.org/web/20200430143244/https://www.wired.com/story/molecule-designed-ai-exhibits-druglike-qualities/ |url-status=live }}</ref>

=== Customer relationship management ===
{{Main|Customer relationship management}}
[[Deep reinforcement learning]] has been used to approximate the value of possible [[direct marketing]] actions, defined in terms of [[RFM (customer value)|RFM]] variables. The estimated value function was shown to have a natural interpretation as [[customer lifetime value]].<ref>{{cite arXiv|last=Tkachenko |first=Yegor |title=Autonomous CRM Control via CLV Approximation with Deep Reinforcement Learning in Discrete and Continuous Action Space |date=8 April 2015 |eprint=1504.01840|class=cs.LG }}</ref>

=== Recommendation systems ===
{{Main|Recommender system}}
Recommendation systems have used deep learning to extract meaningful features for a latent factor model for content-based music and journal recommendations.<ref>{{Cite book|url=http://papers.nips.cc/paper/5004-deep-content-based-music-recommendation.pdf|title=Advances in Neural Information Processing Systems 26|last1=van den Oord|first1=Aaron|last2=Dieleman|first2=Sander|last3=Schrauwen|first3=Benjamin|date=2013|publisher=Curran Associates, Inc.|editor-last=Burges|editor-first=C. J. C.|pages=2643–2651|editor-last2=Bottou|editor-first2=L.|editor-last3=Welling|editor-first3=M.|editor-last4=Ghahramani|editor-first4=Z.|editor-last5=Weinberger|editor-first5=K. Q.|access-date=2017-06-14|archive-date=2017-05-16|archive-url=https://web.archive.org/web/20170516185259/http://papers.nips.cc/paper/5004-deep-content-based-music-recommendation.pdf|url-status=live}}</ref><ref>{{cite journal | last1 = Feng | first1 = X.Y. | last2 = Zhang | first2 = H. | last3 = Ren | first3 = Y.J. | last4 = Shang | first4 = P.H. | last5 = Zhu | first5 = Y. | last6 = Liang | first6 = Y.C. | last7 = Guan | first7 = R.C. | last8 = Xu | first8 = D. | year = 2019 | title = The Deep Learning–Based Recommender System "Pubmender" for Choosing a Biomedical Publication Venue: Development and Validation Study | journal = [[Journal of Medical Internet Research]] | volume = 21 | issue = 5| page = e12957 | doi = 10.2196/12957 | pmid = 31127715 | pmc = 6555124 | doi-access = free }}</ref> Multi-view deep learning has been applied for learning user preferences from multiple domains.<ref>{{Cite journal|last1=Elkahky|first1=Ali Mamdouh|last2=Song|first2=Yang|last3=He|first3=Xiaodong|date=1 May 2015|title=A Multi-View Deep Learning Approach for Cross Domain User Modeling in Recommendation Systems|url=https://www.microsoft.com/en-us/research/publication/a-multi-view-deep-learning-approach-for-cross-domain-user-modeling-in-recommendation-systems/|journal=Microsoft Research|access-date=14 June 2017|archive-date=25 January 2018|archive-url=https://web.archive.org/web/20180125134534/https://www.microsoft.com/en-us/research/publication/a-multi-view-deep-learning-approach-for-cross-domain-user-modeling-in-recommendation-systems/|url-status=live}}</ref> The model uses a hybrid collaborative and content-based approach and enhances recommendations in multiple tasks.

=== Bioinformatics ===
{{Main|Bioinformatics}}
An [[autoencoder]] ANN was used in [[bioinformatics]], to predict [[Gene Ontology|gene ontology]] annotations and gene-function relationships.<ref>{{cite book|first1=Davide|last1=Chicco|first2=Peter|last2=Sadowski|first3=Pierre|last3=Baldi|title=Proceedings of the 5th ACM Conference on Bioinformatics, Computational Biology, and Health Informatics |chapter=Deep autoencoder neural networks for gene ontology annotation predictions |s2cid=207217210|date=1 January 2014|publisher=ACM|pages=533–540|doi=10.1145/2649387.2649442|isbn=9781450328944|hdl=11311/964622|url=http://dl.acm.org/citation.cfm?id=2649442|access-date=23 November 2015|archive-date=9 May 2021|archive-url=https://web.archive.org/web/20210509123140/https://dl.acm.org/doi/10.1145/2649387.2649442|url-status=live}}</ref>

In medical informatics, deep learning was used to predict sleep quality based on data from wearables<ref>{{Cite journal|last=Sathyanarayana|first=Aarti|s2cid=3821594|date=1 January 2016|title=Sleep Quality Prediction From Wearable Data Using Deep Learning|journal=JMIR mHealth and uHealth|volume=4|issue=4|doi=10.2196/mhealth.6562|pmid=27815231|pmc=5116102|pages=e125 |doi-access=free }}</ref> and predictions of health complications from [[electronic health record]] data.<ref>{{Cite journal|last1=Choi|first1=Edward|last2=Schuetz|first2=Andy|last3=Stewart|first3=Walter F.|last4=Sun|first4=Jimeng|date=13 August 2016|title=Using recurrent neural network models for early detection of heart failure onset|journal=Journal of the American Medical Informatics Association|volume=24|issue=2|pages=361–370|doi=10.1093/jamia/ocw112|issn=1067-5027|pmid=27521897|pmc=5391725}}</ref>

Deep neural networks have shown unparalleled performance in [[Protein structure prediction|predicting protein structure]], according to the sequence of the amino acids that make it up. In 2020, [[AlphaFold]], a deep-learning based system, achieved a level of accuracy significantly higher than all previous computational methods.<ref>{{Cite web |title=DeepMind's protein-folding AI has solved a 50-year-old grand challenge of biology |url=https://www.technologyreview.com/2020/11/30/1012712/deepmind-protein-folding-ai-solved-biology-science-drugs-disease/ |access-date=2024-05-10 |website=MIT Technology Review |language=en}}</ref><ref>{{Cite web |last=Shead |first=Sam |date=2020-11-30 |title=DeepMind solves 50-year-old 'grand challenge' with protein folding A.I. |url=https://www.cnbc.com/2020/11/30/deepmind-solves-protein-folding-grand-challenge-with-alphafold-ai.html |access-date=2024-05-10 |website=CNBC |language=en}}</ref>

=== Deep Neural Network Estimations ===
Deep neural networks can be used to estimate the entropy of a [[stochastic process]] and called Neural Joint Entropy Estimator (NJEE).<ref name="SPB22">{{Cite journal |last1=Shalev |first1=Y. |last2=Painsky |first2=A. |last3=Ben-Gal |first3=I. |title=Neural Joint Entropy Estimation |journal=IEEE Transactions on Neural Networks and Learning Systems |language=en |date=2022 |volume=PP |issue=4 |pages=5488–5500 |url=https://www.iradbengal.sites.tau.ac.il/_files/ugd/901879_d51bc0a620734585b5d3154488b3ae84.pdf |doi=10.1109/TNNLS.2022.3204919 |pmid=36155469 |arxiv=2012.11197 |s2cid=229339809 }}</ref> Such an estimation provides insights on the effects of input [[random variables]] on an independent [[random variable]]. Practically, the DNN is trained as a [[Classifier (machine learning)|classifier]] that maps an input [[Vector (mathematics and physics)|vector]] or [[Matrix (mathematics)|matrix]] X to an output [[probability distribution]] over the possible classes of random variable Y, given input X. For example, in [[image classification]] tasks, the NJEE maps a vector of [[pixels]]' color values to probabilities over possible image classes. In practice, the probability distribution of Y is obtained by a [[Softmax]] layer with number of nodes that is equal to the [[alphabet]] size of Y. NJEE uses continuously differentiable [[activation function]]s, such that the conditions for the [[universal approximation theorem]] holds. It is shown that this method provides a strongly [[consistent estimator]] and outperforms other methods in case of large alphabet sizes.<ref name="SPB22" />

=== Medical image analysis ===
Deep learning has been shown to produce competitive results in medical application such as cancer cell classification, lesion detection, organ segmentation and image enhancement.<ref>{{Cite journal|last1=Litjens|first1=Geert|last2=Kooi|first2=Thijs|last3=Bejnordi|first3=Babak Ehteshami|last4=Setio|first4=Arnaud Arindra Adiyoso|last5=Ciompi|first5=Francesco|last6=Ghafoorian|first6=Mohsen|last7=van der Laak|first7=Jeroen A.W.M.|last8=van Ginneken|first8=Bram|last9=Sánchez|first9=Clara I.|s2cid=2088679|date=December 2017|title=A survey on deep learning in medical image analysis|journal=Medical Image Analysis|volume=42|pages=60–88|doi=10.1016/j.media.2017.07.005|pmid=28778026|arxiv=1702.05747|bibcode=2017arXiv170205747L}}</ref><ref>{{Cite book|doi=10.1109/ICCVW.2017.18|isbn=9781538610343|chapter=Deep Convolutional Neural Networks for Detecting Cellular Changes Due to Malignancy|title=2017 IEEE International Conference on Computer Vision Workshops (ICCVW)|pages=82–89|year=2017|last1=Forslid|first1=Gustav|last2=Wieslander|first2=Hakan|last3=Bengtsson|first3=Ewert|last4=Wahlby|first4=Carolina|last5=Hirsch|first5=Jan-Michael|last6=Stark|first6=Christina Runow|last7=Sadanandan|first7=Sajith Kecheril|s2cid=4728736|chapter-url=http://urn.kb.se/resolve?urn=urn:nbn:se:uu:diva-326160|access-date=2019-11-12|archive-date=2021-05-09|archive-url=https://web.archive.org/web/20210509123157/https://d1bxh8uas1mnw7.cloudfront.net/assets/embed.js|url-status=live}}</ref> Modern deep learning tools demonstrate the high accuracy of detecting various diseases and the helpfulness of their use by specialists to improve the diagnosis efficiency.<ref>{{Cite journal |last1=Dong |first1=Xin |last2=Zhou |first2=Yizhao |last3=Wang |first3=Lantian |last4=Peng |first4=Jingfeng |last5=Lou |first5=Yanbo |last6=Fan |first6=Yiqun |date=2020 |title=Liver Cancer Detection Using Hybridized Fully Convolutional Neural Network Based on Deep Learning Framework |journal=IEEE Access |volume=8 |pages=129889–129898 |doi=10.1109/ACCESS.2020.3006362 |bibcode=2020IEEEA...8l9889D |s2cid=220733699 |issn=2169-3536|doi-access=free }}</ref><ref>{{Cite journal |last1=Lyakhov |first1=Pavel Alekseevich |last2=Lyakhova |first2=Ulyana Alekseevna |last3=Nagornov |first3=Nikolay Nikolaevich |date=2022-04-03 |title=System for the Recognizing of Pigmented Skin Lesions with Fusion and Analysis of Heterogeneous Data Based on a Multimodal Neural Network |journal=Cancers |language=en |volume=14 |issue=7 |pages=1819 |doi=10.3390/cancers14071819 |pmid=35406591 |pmc=8997449 |issn=2072-6694|doi-access=free }}</ref>

=== Mobile advertising ===
Finding the appropriate mobile audience for [[mobile advertising]] is always challenging, since many data points must be considered and analyzed before a target segment can be created and used in ad serving by any ad server.<ref>{{cite book |doi=10.1109/CSCITA.2017.8066548 |isbn=978-1-5090-4381-1|chapter=Predicting the popularity of instagram posts for a lifestyle magazine using deep learning|title=2017 2nd International Conference on Communication Systems, Computing and IT Applications (CSCITA)|pages=174–177|year=2017|last1=De|first1=Shaunak|last2=Maity|first2=Abhishek|last3=Goel|first3=Vritti|last4=Shitole|first4=Sanjay|last5=Bhattacharya|first5=Avik|s2cid=35350962}}</ref> Deep learning has been used to interpret large, many-dimensioned advertising datasets. Many data points are collected during the request/serve/click internet advertising cycle. This information can form the basis of machine learning to improve ad selection.

=== Image restoration ===
Deep learning has been successfully applied to [[inverse problems]] such as [[denoising]], [[super-resolution]], [[inpainting]], and [[film colorization]].<ref>{{Cite news|url=https://blog.floydhub.com/colorizing-and-restoring-old-images-with-deep-learning/|title=Colorizing and Restoring Old Images with Deep Learning|date=13 November 2018|website=FloydHub Blog|language=en|access-date=11 October 2019|archive-date=11 October 2019|archive-url=https://web.archive.org/web/20191011162814/https://blog.floydhub.com/colorizing-and-restoring-old-images-with-deep-learning/|url-status=live}}</ref> These applications include learning methods such as "Shrinkage Fields for Effective Image Restoration"<ref>{{cite conference |url= http://research.uweschmidt.org/pubs/cvpr14schmidt.pdf |first1= Uwe |last1= Schmidt |first2= Stefan |last2= Roth |conference= Computer Vision and Pattern Recognition (CVPR), 2014 IEEE Conference on |title= Shrinkage Fields for Effective Image Restoration |access-date= 2018-01-01 |archive-date= 2018-01-02 |archive-url= https://web.archive.org/web/20180102013217/http://research.uweschmidt.org/pubs/cvpr14schmidt.pdf |url-status= live }}</ref> which trains on an image dataset, and [[Deep Image Prior]], which trains on the image that needs restoration.

=== Financial fraud detection ===
Deep learning is being successfully applied to financial [[fraud detection]], tax evasion detection,<ref>{{cite journal
|first1=Christos |last1=Kleanthous
|first2=Sotirios |last2=Chatzis
|title=Gated Mixture Variational Autoencoders for Value Added Tax audit case selection
|journal=Knowledge-Based Systems
|volume=188
|year=2020
|page=105048
|doi=10.1016/j.knosys.2019.105048
|s2cid=204092079
}}</ref> and anti-money laundering.<ref>{{cite journal
|first=Tomasz
|last=Czech
|title=Deep learning: the next frontier for money laundering detection
|url=https://www.globalbankingandfinance.com/deep-learning-the-next-frontier-for-money-laundering-detection/
|journal=Global Banking and Finance Review
|date=28 June 2018
|access-date=2018-07-15
|archive-date=2018-11-16
|archive-url=https://web.archive.org/web/20181116082711/https://www.globalbankingandfinance.com/deep-learning-the-next-frontier-for-money-laundering-detection/
|url-status=live
}}</ref>

=== Materials science ===
In November 2023, researchers at [[Google DeepMind]] and [[Lawrence Berkeley National Laboratory]] announced that they had developed an AI system known as GNoME. This system has contributed to [[materials science]] by discovering over 2 million new materials within a relatively short timeframe. GNoME employs deep learning techniques to efficiently explore potential material structures, achieving a significant increase in the identification of stable inorganic [[crystal structure]]s. The system's predictions were validated through autonomous robotic experiments, demonstrating a noteworthy success rate of 71%. The data of newly discovered materials is publicly available through the [[Materials Project]] database, offering researchers the opportunity to identify materials with desired properties for various applications. This development has implications for the future of scientific discovery and the integration of AI in material science research, potentially expediting material innovation and reducing costs in product development. The use of AI and deep learning suggests the possibility of minimizing or eliminating manual lab experiments and allowing scientists to focus more on the design and analysis of unique compounds.<ref>{{Cite web |last=Nuñez |first=Michael |date=2023-11-29 |title=Google DeepMind's materials AI has already discovered 2.2 million new crystals |url=https://venturebeat.com/ai/google-deepminds-materials-ai-has-already-discovered-2-2-million-new-crystals/ |access-date=2023-12-19 |website=VentureBeat |language=en-US}}</ref><ref>{{Cite journal |last1=Merchant |first1=Amil |last2=Batzner |first2=Simon |last3=Schoenholz |first3=Samuel S. |last4=Aykol |first4=Muratahan |last5=Cheon |first5=Gowoon |last6=Cubuk |first6=Ekin Dogus |date=December 2023 |title=Scaling deep learning for materials discovery |journal=Nature |language=en |volume=624 |issue=7990 |pages=80–85 |doi=10.1038/s41586-023-06735-9 |issn=1476-4687|doi-access=free |pmid=38030720 |pmc=10700131 |bibcode=2023Natur.624...80M }}</ref><ref>{{Cite journal |last=Peplow |first=Mark |date=2023-11-29 |title=Google AI and robots join forces to build new materials |url=https://www.nature.com/articles/d41586-023-03745-5 |journal=Nature |language=en |doi=10.1038/d41586-023-03745-5|pmid=38030771 |s2cid=265503872 }}</ref>

=== Military ===

The United States Department of Defense applied deep learning to train robots in new tasks through observation.<ref name=":12">{{Cite web|url=https://www.eurekalert.org/pub_releases/2018-02/uarl-ard020218.php|title=Army researchers develop new algorithms to train robots|website=EurekAlert!|access-date=29 August 2018|archive-date=28 August 2018|archive-url=https://web.archive.org/web/20180828035608/https://www.eurekalert.org/pub_releases/2018-02/uarl-ard020218.php|url-status=live}}</ref>

=== Partial differential equations ===
Physics informed neural networks have been used to solve [[partial differential equation]]s in both forward and inverse problems in a data driven manner.<ref>{{Cite journal|last1=Raissi|first1=M.|last2=Perdikaris|first2=P.|last3=Karniadakis|first3=G. E.|date=2019-02-01|title=Physics-informed neural networks: A deep learning framework for solving forward and inverse problems involving nonlinear partial differential equations|journal=Journal of Computational Physics|language=en|volume=378|pages=686–707|doi=10.1016/j.jcp.2018.10.045|bibcode=2019JCoPh.378..686R|osti=1595805|s2cid=57379996|issn=0021-9991|doi-access=free}}</ref> One example is the reconstructing fluid flow governed by the [[Navier–Stokes equations|Navier-Stokes equations]]. Using physics informed neural networks does not require the often expensive mesh generation that conventional [[Computational fluid dynamics|CFD]] methods rely on.<ref>{{Cite journal|last1=Mao|first1=Zhiping|last2=Jagtap|first2=Ameya D.|last3=Karniadakis|first3=George Em|date=2020-03-01|title=Physics-informed neural networks for high-speed flows|journal=Computer Methods in Applied Mechanics and Engineering|language=en|volume=360|pages=112789|doi=10.1016/j.cma.2019.112789|bibcode=2020CMAME.360k2789M|s2cid=212755458|issn=0045-7825|doi-access=free}}</ref><ref>{{Cite journal|last1=Raissi|first1=Maziar|last2=Yazdani|first2=Alireza|last3=Karniadakis|first3=George Em|date=2020-02-28|title=Hidden fluid mechanics: Learning velocity and pressure fields from flow visualizations|journal=Science|volume=367|issue=6481|pages=1026–1030|doi=10.1126/science.aaw4741|pmc=7219083|pmid=32001523|bibcode=2020Sci...367.1026R}}</ref>

=== Deep backward stochastic differential equation method ===
[[Deep backward stochastic differential equation method]] is a numerical method that combines deep learning with [[Backward stochastic differential equation]] (BSDE). This method is particularly useful for solving high-dimensional problems in financial mathematics. By leveraging the powerful function approximation capabilities of [[deep neural networks]], deep BSDE addresses the computational challenges faced by traditional numerical methods in high-dimensional settings. Specifically, traditional methods like finite difference methods or Monte Carlo simulations often struggle with the curse of dimensionality, where computational cost increases exponentially with the number of dimensions. Deep BSDE methods, however, employ deep neural networks to approximate solutions of high-dimensional partial differential equations (PDEs), effectively reducing the computational burden.<ref name="Han2018">{{cite journal | last1=Han | first1=J. | last2=Jentzen | first2=A. | last3=E | first3=W. | title=Solving high-dimensional partial differential equations using deep learning | journal=Proceedings of the National Academy of Sciences | volume=115 | issue=34 | pages=8505–8510 | year=2018 | doi=10.1073/pnas.1718942115 | doi-access=free | pmid=30082389 | pmc=6112690 | arxiv=1707.02568 | bibcode=2018PNAS..115.8505H }}</ref>

In addition, the integration of [[Physics-informed neural networks]] (PINNs) into the deep BSDE framework enhances its capability by embedding the underlying physical laws directly into the neural network architecture. This ensures that the solutions not only fit the data but also adhere to the governing stochastic differential equations. PINNs leverage the power of deep learning while respecting the constraints imposed by the physical models, resulting in more accurate and reliable solutions for financial mathematics problems.

=== Image reconstruction ===
Image reconstruction is the reconstruction of the underlying images from the image-related measurements. Several works showed the better and superior performance of the deep learning methods compared to analytical methods for various applications, e.g., spectral imaging <ref>{{Cite journal |last1=Oktem |first1=Figen S. |last2=Kar |first2=Oğuzhan Fatih |last3=Bezek |first3=Can Deniz |last4=Kamalabadi |first4=Farzad |date=2021 |title=High-Resolution Multi-Spectral Imaging With Diffractive Lenses and Learned Reconstruction |url=https://ieeexplore.ieee.org/document/9415140 |journal=IEEE Transactions on Computational Imaging |volume=7 |pages=489–504 |doi=10.1109/TCI.2021.3075349 |arxiv=2008.11625 |s2cid=235340737 |issn=2333-9403}}</ref> and ultrasound imaging.<ref>{{Cite journal |last1=Bernhardt |first1=Melanie |last2=Vishnevskiy |first2=Valery |last3=Rau |first3=Richard |last4=Goksel |first4=Orcun |date=December 2020 |title=Training Variational Networks With Multidomain Simulations: Speed-of-Sound Image Reconstruction |url=https://ieeexplore.ieee.org/document/9144249 |journal=IEEE Transactions on Ultrasonics, Ferroelectrics, and Frequency Control |volume=67 |issue=12 |pages=2584–2594 |doi=10.1109/TUFFC.2020.3010186 |pmid=32746211 |arxiv=2006.14395 |s2cid=220055785 |issn=1525-8955}}</ref>

=== Weather prediction ===
Traditional weather prediction systems solve a very complex system of partial differential equations. GraphCast is a deep learning based model, trained on a long history of weather data to predict how weather patterns change over time. It is able to  predict weather conditions for up to 10 days globally, at a very detailed level, and in under a minute, with precision similar to state of the art systems.<ref>{{Cite journal |last1=Lam |first1=Remi |last2=Sanchez-Gonzalez |first2=Alvaro |last3=Willson |first3=Matthew |last4=Wirnsberger |first4=Peter |last5=Fortunato |first5=Meire |last6=Alet |first6=Ferran |last7=Ravuri |first7=Suman |last8=Ewalds |first8=Timo |last9=Eaton-Rosen |first9=Zach |last10=Hu |first10=Weihua |last11=Merose |first11=Alexander |last12=Hoyer |first12=Stephan |last13=Holland |first13=George |last14=Vinyals |first14=Oriol |last15=Stott |first15=Jacklynn |date=2023-12-22 |title=Learning skillful medium-range global weather forecasting |journal=Science |language=en |volume=382 |issue=6677 |pages=1416–1421 |doi=10.1126/science.adi2336 |issn=0036-8075|doi-access=free |pmid=37962497 |arxiv=2212.12794 |bibcode=2023Sci...382.1416L }}</ref><ref>{{Cite web |last=Sivakumar |first=Ramakrishnan |date=2023-11-27 |title=GraphCast: A breakthrough in Weather Forecasting |url=https://ramkrishna2910.medium.com/graphcast-a-breakthrough-in-weather-forecasting-d70fae9ac365 |access-date=2024-05-19 |website=Medium |language=en}}</ref>

=== Epigenetic clock ===
{{Main|Epigenetic clock}}

An epigenetic clock is a [[Biomarkers of aging|biochemical test]] that can be used to measure age. Galkin et al. used deep neural networks to train an epigenetic aging clock of unprecedented accuracy using >6,000 blood samples.<ref>{{cite journal | last1 = Galkin | first1 = F. | last2 = Mamoshina | first2 = P. | last3 = Kochetov | first3 = K. | last4 = Sidorenko | first4 = D. | last5 = Zhavoronkov | first5 = A. | year = 2020 | title = DeepMAge: A Methylation Aging Clock Developed with Deep Learning | journal = Aging and Disease | doi = 10.14336/AD | doi-access = free }}</ref> The clock uses information from 1000 [[CpG site]]s and predicts people with certain conditions older than healthy controls: [[Inflammatory bowel disease|IBD]], [[frontotemporal dementia]], [[ovarian cancer]], [[obesity]]. The aging clock was planned to be released for public use in 2021 by an [[Insilico Medicine]] spinoff company Deep Longevity.

== Relation to human cognitive and brain development ==
Deep learning is closely related to a class of theories of [[brain development]] (specifically, neocortical development) proposed by [[cognitive neuroscientist]]s in the early 1990s.<ref name="UTGOFF">{{cite journal | last1 = Utgoff | first1 = P. E. | last2 = Stracuzzi | first2 = D. J. | s2cid = 1119517 | year = 2002 | title = Many-layered learning | journal = Neural Computation | volume = 14 | issue = 10| pages = 2497–2529 | doi=10.1162/08997660260293319| pmid = 12396572 }}</ref><ref name="ELMAN">{{cite book|url={{google books |plainurl=y |id=vELaRu_MrwoC}}|title=Rethinking Innateness: A Connectionist Perspective on Development|last=Elman|first=Jeffrey L.|publisher=MIT Press|year=1998|isbn=978-0-262-55030-7}}</ref><ref name="SHRAGER">{{cite journal | last1 = Shrager | first1 = J. | last2 = Johnson | first2 = MH | year = 1996 | title = Dynamic plasticity influences the emergence of function in a simple cortical array | journal = Neural Networks | volume = 9 | issue = 7| pages = 1119–1129 | doi=10.1016/0893-6080(96)00033-0| pmid = 12662587 }}</ref><ref name="QUARTZ">{{cite journal | last1 = Quartz | first1 = SR | last2 = Sejnowski | first2 = TJ | year = 1997 | title = The neural basis of cognitive development: A constructivist manifesto | journal = Behavioral and Brain Sciences | volume = 20 | issue = 4| pages = 537–556 | doi=10.1017/s0140525x97001581| pmid = 10097006 | citeseerx = 10.1.1.41.7854 | s2cid = 5818342 }}</ref> These developmental theories were instantiated in computational models, making them predecessors of deep learning systems. These developmental models share the property that various proposed learning dynamics in the brain (e.g., a wave of [[nerve growth factor]]) support the [[self-organization]] somewhat analogous to the neural networks utilized in deep learning models. Like the [[neocortex]], neural networks employ a hierarchy of layered filters in which each layer considers information from a prior layer (or the operating environment), and then passes its output (and possibly the original input), to other layers. This process yields a self-organizing stack of [[transducer]]s, well-tuned to their operating environment. A 1995 description stated, "...the infant's brain seems to organize itself under the influence of waves of so-called trophic-factors ... different regions of the brain become connected sequentially, with one layer of tissue maturing before another and so on until the whole brain is mature".<ref name="BLAKESLEE">S. Blakeslee, "In brain's early growth, timetable may be critical", ''The New York Times, Science Section'', pp. B5–B6, 1995.</ref>

A variety of approaches have been used to investigate the plausibility of deep learning models from a neurobiological perspective. On the one hand, several variants of the [[backpropagation]] algorithm have been proposed in order to increase its processing realism.<ref>{{Cite journal|last1=Mazzoni|first1=P.|last2=Andersen|first2=R. A.|last3=Jordan|first3=M. I.|date=15 May 1991|title=A more biologically plausible learning rule for neural networks.|journal=Proceedings of the National Academy of Sciences|volume=88|issue=10|pages=4433–4437|doi=10.1073/pnas.88.10.4433|issn=0027-8424|pmid=1903542|pmc=51674|bibcode=1991PNAS...88.4433M|doi-access=free}}</ref><ref>{{Cite journal|last=O'Reilly|first=Randall C.|s2cid=2376781|date=1 July 1996|title=Biologically Plausible Error-Driven Learning Using Local Activation Differences: The Generalized Recirculation Algorithm|journal=Neural Computation|volume=8|issue=5|pages=895–938|doi=10.1162/neco.1996.8.5.895|issn=0899-7667}}</ref> Other researchers have argued that unsupervised forms of deep learning, such as those based on hierarchical [[generative model]]s and [[deep belief network]]s, may be closer to biological reality.<ref>{{Cite journal|last1=Testolin|first1=Alberto|last2=Zorzi|first2=Marco|s2cid=9868901|date=2016|title=Probabilistic Models and Generative Neural Networks: Towards an Unified Framework for Modeling Normal and Impaired Neurocognitive Functions|journal=Frontiers in Computational Neuroscience|volume=10|pages=73|doi=10.3389/fncom.2016.00073|pmid=27468262|pmc=4943066|issn=1662-5188|doi-access=free}}</ref><ref>{{Cite journal|last1=Testolin|first1=Alberto|last2=Stoianov|first2=Ivilin|last3=Zorzi|first3=Marco|s2cid=24504018|date=September 2017|title=Letter perception emerges from unsupervised deep learning and recycling of natural image features|journal=Nature Human Behaviour|volume=1|issue=9|pages=657–664|doi=10.1038/s41562-017-0186-2|pmid=31024135|issn=2397-3374}}</ref> In this respect, generative neural network models have been related to neurobiological evidence about sampling-based processing in the cerebral cortex.<ref>{{Cite journal|last1=Buesing|first1=Lars|last2=Bill|first2=Johannes|last3=Nessler|first3=Bernhard|last4=Maass|first4=Wolfgang|s2cid=7504633|date=3 November 2011|title=Neural Dynamics as Sampling: A Model for Stochastic Computation in Recurrent Networks of Spiking Neurons|journal=PLOS Computational Biology|volume=7|issue=11|pages=e1002211|doi=10.1371/journal.pcbi.1002211|pmid=22096452|pmc=3207943|issn=1553-7358|bibcode=2011PLSCB...7E2211B |doi-access=free }}</ref>

Although a systematic comparison between the human brain organization and the neuronal encoding in deep networks has not yet been established, several analogies have been reported. For example, the computations performed by deep learning units could be similar to those of actual neurons<ref>{{Cite journal|last1=Cash|first1=S.|last2=Yuste|first2=R.|date=February 1999|title=Linear summation of excitatory inputs by CA1 pyramidal neurons|journal=Neuron|volume=22|issue=2|pages=383–394|issn=0896-6273|pmid=10069343|doi=10.1016/s0896-6273(00)81098-3|s2cid=14663106|doi-access=free}}</ref> and neural populations.<ref>{{Cite journal|date=1 August 2004|title=Sparse coding of sensory inputs|journal=Current Opinion in Neurobiology|volume=14|issue=4|pages=481–487|doi=10.1016/j.conb.2004.07.007|pmid=15321069|issn=0959-4388 | last1 = Olshausen | first1 = B | last2 = Field | first2 = D|s2cid=16560320}}</ref> Similarly, the representations developed by deep learning models are similar to those measured in the primate visual system<ref>{{Cite journal|last1=Yamins|first1=Daniel L K|last2=DiCarlo|first2=James J|s2cid=16970545|date=March 2016|title=Using goal-driven deep learning models to understand sensory cortex|journal=Nature Neuroscience|volume=19|issue=3|pages=356–365|doi=10.1038/nn.4244|pmid=26906502|issn=1546-1726}}</ref> both at the single-unit<ref>{{Cite journal|last1=Zorzi|first1=Marco|last2=Testolin|first2=Alberto|s2cid=39281431|date=19 February 2018|title=An emergentist perspective on the origin of number sense|journal=Phil. Trans. R. Soc. B|volume=373|issue=1740|pages=20170043|doi=10.1098/rstb.2017.0043|issn=0962-8436|pmid=29292348|pmc=5784047}}</ref> and at the population<ref>{{Cite journal|last1=Güçlü|first1=Umut|last2=van Gerven|first2=Marcel A. J.|date=8 July 2015|title=Deep Neural Networks Reveal a Gradient in the Complexity of Neural Representations across the Ventral Stream|journal=Journal of Neuroscience|volume=35|issue=27|pages=10005–10014|doi=10.1523/jneurosci.5023-14.2015|pmid=26157000|pmc=6605414|arxiv=1411.6422}}</ref> levels.

== Commercial activity ==
[[Facebook]]'s AI lab performs tasks such as [[Automatic image annotation|automatically tagging uploaded pictures]] with the names of the people in them.<ref name="METZ2013">{{cite magazine |first=C. |last=Metz |title=Facebook's 'Deep Learning' Guru Reveals the Future of AI |url=https://www.wired.com/wiredenterprise/2013/12/facebook-yann-lecun-qa/ |magazine=Wired |date=12 December 2013 |access-date=26 August 2017 |archive-date=28 March 2014 |archive-url=https://web.archive.org/web/20140328071226/http://www.wired.com/wiredenterprise/2013/12/facebook-yann-lecun-qa/ |url-status=live }}</ref>

Google's [[DeepMind Technologies]] developed a system capable of learning how to play [[Atari]] video games using only pixels as data input. In 2015 they demonstrated their [[AlphaGo]] system, which learned the game of [[Go (game)|Go]] well enough to beat a professional Go player.<ref>{{Cite journal|title = Google AI algorithm masters ancient game of Go|journal = Nature|year = 2016|doi = 10.1038/529445a|last1 = Gibney|first1 = Elizabeth|volume = 529|issue = 7587|pages = 445–446|pmid = 26819021|bibcode = 2016Natur.529..445G|s2cid = 4460235|doi-access = free}}</ref><ref>{{Cite journal|title = Mastering the game of Go with deep neural networks and tree search|journal = [[Nature (journal)|Nature]]| issn= 0028-0836|pages = 484–489|volume = 529|issue = 7587|doi = 10.1038/nature16961|pmid = 26819042|first1 = David|last1 = Silver|author-link1=David Silver (programmer)|first2 = Aja|last2 = Huang|author-link2=Aja Huang|first3 = Chris J.|last3 = Maddison|first4 = Arthur|last4 = Guez|first5 = Laurent|last5 = Sifre|first6 = George van den|last6 = Driessche|first7 = Julian|last7 = Schrittwieser|first8 = Ioannis|last8 = Antonoglou|first9 = Veda|last9 = Panneershelvam|first10= Marc|last10= Lanctot|first11= Sander|last11= Dieleman|first12=Dominik|last12= Grewe|first13= John|last13= Nham|first14= Nal|last14= Kalchbrenner|first15= Ilya|last15= Sutskever|author-link15=Ilya Sutskever|first16= Timothy|last16= Lillicrap|first17= Madeleine|last17= Leach|first18= Koray|last18= Kavukcuoglu|first19= Thore|last19= Graepel|first20= Demis |last20=Hassabis|s2cid = 515925|author-link20=Demis Hassabis|date= 28 January 2016|bibcode = 2016Natur.529..484S}}{{closed access}}</ref><ref>{{Cite web|title = A Google DeepMind Algorithm Uses Deep Learning and More to Master the Game of Go {{!}} MIT Technology Review|url = http://www.technologyreview.com/news/546066/googles-ai-masters-the-game-of-go-a-decade-earlier-than-expected/|website = MIT Technology Review|access-date = 30 January 2016|archive-date = 1 February 2016|archive-url = https://web.archive.org/web/20160201140636/http://www.technologyreview.com/news/546066/googles-ai-masters-the-game-of-go-a-decade-earlier-than-expected/|url-status = dead}}</ref> [[Google Translate]] uses a neural network to translate between more than 100 languages.

In 2017, Covariant.ai was launched, which focuses on integrating deep learning into factories.<ref>{{Cite news|url=https://www.nytimes.com/2017/11/06/technology/artificial-intelligence-start-up.html|title=A.I. Researchers Leave Elon Musk Lab to Begin Robotics Start-Up|first=Cade|last=Metz|newspaper=The New York Times|date=6 November 2017|access-date=5 July 2019|archive-date=7 July 2019|archive-url=https://web.archive.org/web/20190707161547/https://www.nytimes.com/2017/11/06/technology/artificial-intelligence-start-up.html|url-status=live}}</ref>

As of 2008,<ref>{{Cite book|author1=Bradley Knox, W.|author2=Stone, Peter|title=2008 7th IEEE International Conference on Development and Learning |chapter=TAMER: Training an Agent Manually via Evaluative Reinforcement |year=2008|pages = 292–297|doi=10.1109/devlrn.2008.4640845|isbn = 978-1-4244-2661-4|s2cid = 5613334}}</ref> researchers at [[University of Texas at Austin|The University of Texas at Austin]] (UT) developed a machine learning framework called Training an Agent Manually via Evaluative Reinforcement, or TAMER, which proposed new methods for robots or computer programs to learn how to perform tasks by interacting with a human instructor.<ref name=":12" /> First developed as TAMER, a new algorithm called Deep TAMER was later introduced in 2018 during a collaboration between [[U.S. Army Research Laboratory]] (ARL) and UT researchers. Deep TAMER used deep learning to provide a robot with the ability to learn new tasks through observation.<ref name=":12" /> Using Deep TAMER, a robot learned a task with a human trainer, watching video streams or observing a human perform a task in-person. The robot later practiced the task with the help of some coaching from the trainer, who provided feedback such as "good job" and "bad job".<ref>{{Cite web|url=https://governmentciomedia.com/talk-algorithms-ai-becomes-faster-learner|title=Talk to the Algorithms: AI Becomes a Faster Learner|website=governmentciomedia.com|date=16 May 2018 |access-date=29 August 2018|archive-date=28 August 2018|archive-url=https://web.archive.org/web/20180828001727/https://governmentciomedia.com/talk-algorithms-ai-becomes-faster-learner|url-status=live}}</ref>

== Criticism and comment ==
Deep learning has attracted both criticism and comment, in some cases from outside the field of computer science.

=== Theory ===
{{see also|Explainable artificial intelligence}}
A main criticism concerns the lack of theory surrounding some methods.<ref>{{Cite web|url=https://medium.com/@GaryMarcus/in-defense-of-skepticism-about-deep-learning-6e8bfd5ae0f1|title=In defense of skepticism about deep learning|last=Marcus|first=Gary|date=14 January 2018|website=Gary Marcus|access-date=11 October 2018|archive-date=12 October 2018|archive-url=https://web.archive.org/web/20181012035405/https://medium.com/@GaryMarcus/in-defense-of-skepticism-about-deep-learning-6e8bfd5ae0f1|url-status=live}}</ref> Learning in the most common deep architectures is implemented using well-understood gradient descent. However, the theory surrounding other algorithms, such as contrastive divergence is less clear.{{citation needed|date=July 2016}} (e.g., Does it converge? If so, how fast? What is it approximating?) Deep learning methods are often looked at as a [[black box]], with most confirmations done empirically, rather than theoretically.<ref name="Knight 2017">{{cite web | last=Knight | first=Will | title=DARPA is funding projects that will try to open up AI's black boxes | website=MIT Technology Review | date=14 March 2017 | url=https://www.technologyreview.com/s/603795/the-us-military-wants-its-autonomous-machines-to-explain-themselves/ | access-date=2 November 2017 | archive-date=4 November 2019 | archive-url=https://web.archive.org/web/20191104033107/https://www.technologyreview.com/s/603795/the-us-military-wants-its-autonomous-machines-to-explain-themselves/ | url-status=live }}</ref>

In further reference to the idea that artistic sensitivity might be inherent in relatively low levels of the cognitive hierarchy, a published series of graphic representations of the internal states of deep (20-30 layers) neural networks attempting to discern within essentially random data the images on which they were trained<ref>{{cite web |url=http://googleresearch.blogspot.co.uk/2015/06/inceptionism-going-deeper-into-neural.html |author1=Alexander Mordvintsev |author2=Christopher Olah |author3=Mike Tyka |date=17 June 2015 |title=Inceptionism: Going Deeper into Neural Networks |publisher=Google Research Blog |access-date=20 June 2015 |archive-date=3 July 2015 |archive-url=https://web.archive.org/web/20150703064823/http://googleresearch.blogspot.co.uk/2015/06/inceptionism-going-deeper-into-neural.html |url-status=live }}</ref> demonstrate a visual appeal: the original research notice received well over 1,000 comments, and was the subject of what was for a time the most frequently accessed article on ''[[The Guardian]]'s''<ref>{{cite news|url=https://www.theguardian.com/technology/2015/jun/18/google-image-recognition-neural-network-androids-dream-electric-sheep|title=Yes, androids do dream of electric sheep|date=18 June 2015|newspaper=The Guardian|author=Alex Hern|access-date=20 June 2015|archive-date=19 June 2015|archive-url=https://web.archive.org/web/20150619200845/http://www.theguardian.com/technology/2015/jun/18/google-image-recognition-neural-network-androids-dream-electric-sheep|url-status=live}}</ref> website.
=== Errors ===
Some deep learning architectures display problematic behaviors,<ref name=goertzel>{{cite web |first=Ben |last=Goertzel |title=Are there Deep Reasons Underlying the Pathologies of Today's Deep Learning Algorithms? |year=2015 |url=http://goertzel.org/DeepLearning_v1.pdf |access-date=2015-05-10 |archive-date=2015-05-13 |archive-url=https://web.archive.org/web/20150513053107/http://goertzel.org/DeepLearning_v1.pdf |url-status=live }}</ref> such as confidently classifying unrecognizable images as belonging to a familiar category of ordinary images (2014)<ref>{{cite arXiv |eprint=1412.1897|last1=Nguyen|first1=Anh|title=Deep Neural Networks are Easily Fooled: High Confidence Predictions for Unrecognizable Images|last2=Yosinski|first2=Jason|last3=Clune|first3=Jeff|class=cs.CV|year=2014}}</ref> and misclassifying minuscule perturbations of correctly classified images (2013).<ref>{{cite arXiv |eprint=1312.6199|last1=Szegedy|first1=Christian|title=Intriguing properties of neural networks|last2=Zaremba|first2=Wojciech|last3=Sutskever|first3=Ilya|last4=Bruna|first4=Joan|last5=Erhan|first5=Dumitru|last6=Goodfellow|first6=Ian|last7=Fergus|first7=Rob|class=cs.CV|year=2013}}</ref> [[Ben Goertzel|Goertzel]] hypothesized that these behaviors are due to limitations in their internal representations and that these limitations would inhibit integration into heterogeneous multi-component [[artificial general intelligence]] (AGI) architectures.<ref name="goertzel" /> These issues may possibly be addressed by deep learning architectures that internally form states homologous to image-grammar<ref>{{cite journal | last1 = Zhu | first1 = S.C. | last2 = Mumford | first2 = D. | year = 2006| title = A stochastic grammar of images | journal = Found. Trends Comput. Graph. Vis. | volume = 2 | issue = 4| pages = 259–362 | doi = 10.1561/0600000018| citeseerx = 10.1.1.681.2190 }}</ref> decompositions of observed entities and events.<ref name="goertzel"/> [[Grammar induction|Learning a grammar]] (visual or linguistic) from training data would be equivalent to restricting the system to [[commonsense reasoning]] that operates on concepts in terms of grammatical [[Production (computer science)|production rules]] and is a basic goal of both human language acquisition<ref>Miller, G. A., and N. Chomsky. "Pattern conception". Paper for Conference on pattern detection, University of Michigan. 1957.</ref> and [[artificial intelligence]] (AI).<ref>{{cite web |first=Jason |last=Eisner |title=Deep Learning of Recursive Structure: Grammar Induction |url=http://techtalks.tv/talks/deep-learning-of-recursive-structure-grammar-induction/58089/ |access-date=2015-05-10 |archive-date=2017-12-30 |archive-url=https://web.archive.org/web/20171230010335/http://techtalks.tv/talks/deep-learning-of-recursive-structure-grammar-induction/58089/ |url-status=dead }}</ref>

=== Cyber threat ===
As deep learning moves from the lab into the world, research and experience show that artificial neural networks are vulnerable to hacks and deception.<ref>{{Cite web|url=https://gizmodo.com/hackers-have-already-started-to-weaponize-artificial-in-1797688425|title=Hackers Have Already Started to Weaponize Artificial Intelligence|website=Gizmodo|date=11 September 2017 |access-date=11 October 2019|archive-date=11 October 2019|archive-url=https://web.archive.org/web/20191011162231/https://gizmodo.com/hackers-have-already-started-to-weaponize-artificial-in-1797688425|url-status=live}}</ref> By identifying patterns that these systems use to function, attackers can modify inputs to ANNs in such a way that the ANN finds a match that human observers would not recognize. For example, an attacker can make subtle changes to an image such that the ANN finds a match even though the image looks to a human nothing like the search target. Such manipulation is termed an "[[Adversarial machine learning|adversarial attack]]".<ref>{{Cite web|url=https://www.dailydot.com/debug/adversarial-attacks-ai-mistakes/|title=How hackers can force AI to make dumb mistakes|date=18 June 2018|website=The Daily Dot|language=en|access-date=11 October 2019|archive-date=11 October 2019|archive-url=https://web.archive.org/web/20191011162230/https://www.dailydot.com/debug/adversarial-attacks-ai-mistakes/|url-status=live}}</ref>

In 2016 researchers used one ANN to doctor images in trial and error fashion, identify another's focal points, and thereby generate images that deceived it. The modified images looked no different to human eyes. Another group showed that printouts of doctored images then photographed successfully tricked an image classification system.<ref name=":4">{{Cite news|url=https://singularityhub.com/2017/10/10/ai-is-easy-to-fool-why-that-needs-to-change|title=AI Is Easy to Fool—Why That Needs to Change|date=10 October 2017|work=Singularity Hub|access-date=11 October 2017|archive-date=11 October 2017|archive-url=https://web.archive.org/web/20171011233017/https://singularityhub.com/2017/10/10/ai-is-easy-to-fool-why-that-needs-to-change/|url-status=live}}</ref> One defense is reverse image search, in which a possible fake image is submitted to a site such as [[TinEye]] that can then find other instances of it. A refinement is to search using only parts of the image, to identify images from which that piece may have been taken'''.'''<ref>{{Cite journal|last=Gibney|first=Elizabeth|title=The scientist who spots fake videos|url=https://www.nature.com/news/the-scientist-who-spots-fake-videos-1.22784|journal=Nature|doi=10.1038/nature.2017.22784|year=2017|access-date=2017-10-11|archive-date=2017-10-10|archive-url=https://web.archive.org/web/20171010011017/http://www.nature.com/news/the-scientist-who-spots-fake-videos-1.22784|url-status=live}}</ref>

Another group showed that certain [[Psychedelic art|psychedelic]] spectacles could fool a [[facial recognition system]] into thinking ordinary people were celebrities, potentially allowing one person to impersonate another. In 2017 researchers added stickers to [[stop sign]]s and caused an ANN to misclassify them.<ref name=":4" />

ANNs can however be further trained to detect attempts at [[deception]], potentially leading attackers and defenders into an arms race similar to the kind that already defines the [[malware]] defense industry. ANNs have been trained to defeat ANN-based anti-[[malware]] software by repeatedly attacking a defense with malware that was continually altered by a [[genetic algorithm]] until it tricked the anti-malware while retaining its ability to damage the target.<ref name=":4" />

In 2016, another group demonstrated that certain sounds could make the [[Google Now]] voice command system open a particular web address, and hypothesized that this could "serve as a stepping stone for further attacks (e.g., opening a web page hosting drive-by malware)".<ref name=":4" />

In "[[Adversarial machine learning#Data poisoning|data poisoning]]", false data is continually smuggled into a machine learning system's training set to prevent it from achieving mastery.<ref name=":4" />

=== Data collection ethics ===
The deep learning systems that are trained using supervised learning often rely on data that is created and/or annotated by humans.<ref>{{Cite journal |last=Tubaro |first=Paola |date=2020 |title=Whose intelligence is artificial intelligence? |url=https://hal.science/hal-03029735 |journal=Global Dialogue |language=en |pages=38–39}}</ref> It has been argued that not only low-paid [[Clickworkers|clickwork]] (such as on [[Amazon Mechanical Turk]]) is regularly deployed for this purpose, but also implicit forms of human [[microwork]] that are often not recognized as such.<ref name=":13">{{Cite journal|last=Mühlhoff|first=Rainer|date=6 November 2019|title=Human-aided artificial intelligence: Or, how to run large computations in human brains? Toward a media sociology of machine learning|journal=New Media & Society|language=en|volume=22|issue=10|pages=1868–1884|doi=10.1177/1461444819885334|s2cid=209363848|issn=1461-4448|url=https://depositonce.tu-berlin.de/handle/11303/12510|doi-access=free}}</ref> The philosopher [[Rainer Mühlhoff]] distinguishes five types of "machinic capture" of human microwork to generate training data: (1) [[gamification]] (the embedding of annotation or computation tasks in the flow of a game), (2) "trapping and tracking" (e.g. [[CAPTCHA]]s for image recognition or click-tracking on Google [[Search engine results page|search results pages]]), (3) exploitation of social motivations (e.g. [[Tag (Facebook)|tagging faces]] on [[Facebook]] to obtain labeled facial images), (4) [[information mining]] (e.g. by leveraging [[Quantified self|quantified-self]] devices such as [[activity tracker]]s) and (5) [[Clickworkers|clickwork]].<ref name=":13" />

== See also ==
* [[Applications of artificial intelligence]]
* [[Comparison of deep learning software]]
* [[Compressed sensing]]
* [[Differentiable programming]]
* [[Echo state network]]
* [[List of artificial intelligence projects]]
* [[Liquid state machine]]
* [[List of datasets for machine-learning research]]
* [[Reservoir computing]]
* [[Scale space#Deep learning and scale space|Scale space and deep learning]]
* [[Sparse coding]]
* [[Stochastic parrot]]
* [[Topological deep learning]]

== References ==
{{Reflist|30em}}

== Further reading ==
{{refbegin}}
* {{cite book |last1=Bishop |first1=Christopher M. |last2=Bishop |first2=Hugh |title=Deep learning: foundations and concepts |date=2024 |publisher=Springer |isbn=978-3-031-45467-7}}
* {{cite book |last1=Prince |first1=Simon J. D. |title=Understanding deep learning |date=2023 |publisher=The MIT Press |isbn=9780262048644}}
* {{cite book
|title=Deep Learning
|year=2016
|first1=Ian
|last1=Goodfellow
|author-link1=Ian Goodfellow
|first2=Yoshua
|last2=Bengio
|author-link2=Yoshua Bengio
|first3=Aaron
|last3=Courville
|publisher=MIT Press
|url=http://www.deeplearningbook.org
|isbn=978-0-26203561-3
|postscript=, introductory textbook.
|access-date=2021-05-09
|archive-date=2016-04-16
|archive-url=https://web.archive.org/web/20160416111010/http://www.deeplearningbook.org/
|url-status=live
}}

{{Prone to spam|date=June 2015}}<!-- {{No more links}}

Please be cautious about adding more external links.

Wikipedia is not a collection of links and should not be used for advertising.

Excessive or inappropriate links will be removed.

 See [[Wikipedia:External links]] and [[Wikipedia:Spam]] for details.

If there are already suitable links, propose additions or replacements on
the article's talk page, or submit your link to the relevant category at
DMOZ (dmoz.org) and link there using {{Dmoz}}.

-->
{{refend}}

{{Artificial intelligence navbox}}

[[Category:Deep learning| ]]